
./a.out:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400200 <.interp>:
  400200:	2f                   	(bad)  
  400201:	6c                   	insb   (%dx),%es:(%rdi)
  400202:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400209:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  40020e:	78 2d                	js     40023d <_init-0x4fb>
  400210:	78 38                	js     40024a <_init-0x4ee>
  400212:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400218:	6f                   	outsl  %ds:(%rsi),(%dx)
  400219:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

000000000040021c <.note.ABI-tag>:
  40021c:	04 00                	add    $0x0,%al
  40021e:	00 00                	add    %al,(%rax)
  400220:	10 00                	adc    %al,(%rax)
  400222:	00 00                	add    %al,(%rax)
  400224:	01 00                	add    %eax,(%rax)
  400226:	00 00                	add    %al,(%rax)
  400228:	47                   	rex.RXB
  400229:	4e 55                	rex.WRX push %rbp
  40022b:	00 00                	add    %al,(%rax)
  40022d:	00 00                	add    %al,(%rax)
  40022f:	00 02                	add    %al,(%rdx)
  400231:	00 00                	add    %al,(%rax)
  400233:	00 06                	add    %al,(%rsi)
  400235:	00 00                	add    %al,(%rax)
  400237:	00 20                	add    %ah,(%rax)
  400239:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

000000000040023c <.note.gnu.build-id>:
  40023c:	04 00                	add    $0x0,%al
  40023e:	00 00                	add    %al,(%rax)
  400240:	14 00                	adc    $0x0,%al
  400242:	00 00                	add    %al,(%rax)
  400244:	03 00                	add    (%rax),%eax
  400246:	00 00                	add    %al,(%rax)
  400248:	47                   	rex.RXB
  400249:	4e 55                	rex.WRX push %rbp
  40024b:	00 1f                	add    %bl,(%rdi)
  40024d:	e5 56                	in     $0x56,%eax
  40024f:	f6 6b 8e             	imulb  -0x72(%rbx)
  400252:	f5                   	cmc    
  400253:	fd                   	std    
  400254:	dd a4 84 ba e6 5b 57 	frstor 0x575be6ba(%rsp,%rax,4)
  40025b:	47 03 30             	rex.RXB add (%r8),%r14d
  40025e:	c2                   	.byte 0xc2
  40025f:	7a                   	.byte 0x7a

Disassembly of section .gnu.hash:

0000000000400260 <.gnu.hash>:
  400260:	02 00                	add    (%rax),%al
  400262:	00 00                	add    %al,(%rax)
  400264:	13 00                	adc    (%rax),%eax
  400266:	00 00                	add    %al,(%rax)
  400268:	01 00                	add    %eax,(%rax)
  40026a:	00 00                	add    %al,(%rax)
  40026c:	06                   	(bad)  
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 00                	add    %al,(%rax)
  400271:	01 00                	add    %eax,(%rax)
  400273:	00 00                	add    %al,(%rax)
  400275:	00 00                	add    %al,(%rax)
  400277:	02 00                	add    (%rax),%al
  400279:	00 00                	add    %al,(%rax)
  40027b:	00 13                	add    %dl,(%rbx)
  40027d:	00 00                	add    %al,(%rax)
  40027f:	00 39                	add    %bh,(%rcx)
  400281:	f2                   	repnz
  400282:	8b                   	.byte 0x8b
  400283:	1c                   	.byte 0x1c

Disassembly of section .dynsym:

0000000000400288 <.dynsym>:
	...
  4002a0:	86 00                	xchg   %al,(%rax)
  4002a2:	00 00                	add    %al,(%rax)
  4002a4:	12 00                	adc    (%rax),%al
	...
  4002b6:	00 00                	add    %al,(%rax)
  4002b8:	2f                   	(bad)  
  4002b9:	00 00                	add    %al,(%rax)
  4002bb:	00 12                	add    %dl,(%rdx)
	...
  4002cd:	00 00                	add    %al,(%rax)
  4002cf:	00 62 00             	add    %ah,0x0(%rdx)
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	47 00 00             	rex.RXB add %r8b,(%r8)
  4002eb:	00 12                	add    %dl,(%rdx)
	...
  4002fd:	00 00                	add    %al,(%rax)
  4002ff:	00 1a                	add    %bl,(%rdx)
  400301:	00 00                	add    %al,(%rax)
  400303:	00 12                	add    %dl,(%rdx)
	...
  400315:	00 00                	add    %al,(%rax)
  400317:	00 39                	add    %bh,(%rcx)
  400319:	00 00                	add    %al,(%rax)
  40031b:	00 12                	add    %dl,(%rdx)
	...
  40032d:	00 00                	add    %al,(%rax)
  40032f:	00 53 00             	add    %dl,0x0(%rbx)
  400332:	00 00                	add    %al,(%rax)
  400334:	12 00                	adc    (%rax),%al
	...
  400346:	00 00                	add    %al,(%rax)
  400348:	30 00                	xor    %al,(%rax)
  40034a:	00 00                	add    %al,(%rax)
  40034c:	12 00                	adc    (%rax),%al
	...
  40035e:	00 00                	add    %al,(%rax)
  400360:	10 00                	adc    %al,(%rax)
  400362:	00 00                	add    %al,(%rax)
  400364:	12 00                	adc    (%rax),%al
	...
  400376:	00 00                	add    %al,(%rax)
  400378:	28 00                	sub    %al,(%rax)
  40037a:	00 00                	add    %al,(%rax)
  40037c:	12 00                	adc    (%rax),%al
	...
  40038e:	00 00                	add    %al,(%rax)
  400390:	4d 00 00             	rex.WRB add %r8b,(%r8)
  400393:	00 12                	add    %dl,(%rdx)
	...
  4003a5:	00 00                	add    %al,(%rax)
  4003a7:	00 74 00 00          	add    %dh,0x0(%rax,%rax,1)
  4003ab:	00 12                	add    %dl,(%rdx)
	...
  4003bd:	00 00                	add    %al,(%rax)
  4003bf:	00 21                	add    %ah,(%rcx)
  4003c1:	00 00                	add    %al,(%rax)
  4003c3:	00 12                	add    %dl,(%rdx)
	...
  4003d5:	00 00                	add    %al,(%rax)
  4003d7:	00 8b 00 00 00 20    	add    %cl,0x20000000(%rbx)
	...
  4003ed:	00 00                	add    %al,(%rax)
  4003ef:	00 3a                	add    %bh,(%rdx)
  4003f1:	00 00                	add    %al,(%rax)
  4003f3:	00 12                	add    %dl,(%rdx)
	...
  400405:	00 00                	add    %al,(%rax)
  400407:	00 5d 00             	add    %bl,0x0(%rbp)
  40040a:	00 00                	add    %al,(%rax)
  40040c:	12 00                	adc    (%rax),%al
	...
  40041e:	00 00                	add    %al,(%rax)
  400420:	0b 00                	or     (%rax),%eax
  400422:	00 00                	add    %al,(%rax)
  400424:	12 00                	adc    (%rax),%al
	...
  400436:	00 00                	add    %al,(%rax)
  400438:	46 00 00             	rex.RX add %r8b,(%rax)
  40043b:	00 12                	add    %dl,(%rdx)
	...
  40044d:	00 00                	add    %al,(%rax)
  40044f:	00 3f                	add    %bh,(%rdi)
  400451:	00 00                	add    %al,(%rax)
  400453:	00 11                	add    %dl,(%rcx)
  400455:	00 19                	add    %bl,(%rcx)
  400457:	00 40 1c             	add    %al,0x1c(%rax)
  40045a:	60                   	(bad)  
  40045b:	00 00                	add    %al,(%rax)
  40045d:	00 00                	add    %al,(%rax)
  40045f:	00 08                	add    %cl,(%rax)
  400461:	00 00                	add    %al,(%rax)
  400463:	00 00                	add    %al,(%rax)
  400465:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000400468 <.dynstr>:
  400468:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40046c:	63 2e                	movslq (%rsi),%ebp
  40046e:	73 6f                	jae    4004df <_init-0x259>
  400470:	2e 36 00 65 78       	cs add %ah,%ss:0x78(%rbp)
  400475:	69 74 00 6e 61 6e 6f 	imul   $0x736f6e61,0x6e(%rax,%rax,1),%esi
  40047c:	73 
  40047d:	6c                   	insb   (%dx),%es:(%rdi)
  40047e:	65 65 70 00          	gs gs jo 400482 <_init-0x2b6>
  400482:	67 65 74 70          	addr32 gs je 4004f6 <_init-0x242>
  400486:	69 64 00 63 61 6c 6c 	imul   $0x6f6c6c61,0x63(%rax,%rax,1),%esp
  40048d:	6f 
  40048e:	63 00                	movslq (%rax),%eax
  400490:	6d                   	insl   (%dx),%es:(%rdi)
  400491:	65 6d                	gs insl (%dx),%es:(%rdi)
  400493:	73 65                	jae    4004fa <_init-0x23e>
  400495:	74 00                	je     400497 <_init-0x2a1>
  400497:	76 73                	jbe    40050c <_init-0x22c>
  400499:	6e                   	outsb  %ds:(%rsi),(%dx)
  40049a:	70 72                	jo     40050e <_init-0x22a>
  40049c:	69 6e 74 66 00 63 74 	imul   $0x74630066,0x74(%rsi),%ebp
  4004a3:	69 6d 65 00 73 74 64 	imul   $0x64747300,0x65(%rbp),%ebp
  4004aa:	65 72 72             	gs jb  40051f <_init-0x219>
  4004ad:	00 66 77             	add    %ah,0x77(%rsi)
  4004b0:	72 69                	jb     40051b <_init-0x21d>
  4004b2:	74 65                	je     400519 <_init-0x21f>
  4004b4:	00 63 6c             	add    %ah,0x6c(%rbx)
  4004b7:	6f                   	outsl  %ds:(%rsi),(%dx)
  4004b8:	73 65                	jae    40051f <_init-0x219>
  4004ba:	00 62 61             	add    %ah,0x61(%rdx)
  4004bd:	63 6b 74             	movslq 0x74(%rbx),%ebp
  4004c0:	72 61                	jb     400523 <_init-0x215>
  4004c2:	63 65 00             	movslq 0x0(%rbp),%esp
  4004c5:	6f                   	outsl  %ds:(%rsi),(%dx)
  4004c6:	70 65                	jo     40052d <_init-0x20b>
  4004c8:	6e                   	outsb  %ds:(%rsi),(%dx)
  4004c9:	00 62 61             	add    %ah,0x61(%rdx)
  4004cc:	63 6b 74             	movslq 0x74(%rbx),%ebp
  4004cf:	72 61                	jb     400532 <_init-0x206>
  4004d1:	63 65 5f             	movslq 0x5f(%rbp),%esp
  4004d4:	73 79                	jae    40054f <_init-0x1e9>
  4004d6:	6d                   	insl   (%dx),%es:(%rdi)
  4004d7:	62                   	(bad)  
  4004d8:	6f                   	outsl  %ds:(%rsi),(%dx)
  4004d9:	6c                   	insb   (%dx),%es:(%rdi)
  4004da:	73 00                	jae    4004dc <_init-0x25c>
  4004dc:	5f                   	pop    %rdi
  4004dd:	5f                   	pop    %rdi
  4004de:	6c                   	insb   (%dx),%es:(%rdi)
  4004df:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  4004e6:	72 74                	jb     40055c <_init-0x1dc>
  4004e8:	5f                   	pop    %rdi
  4004e9:	6d                   	insl   (%dx),%es:(%rdi)
  4004ea:	61                   	(bad)  
  4004eb:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
  4004f2:	00 5f 5f             	add    %bl,0x5f(%rdi)
  4004f5:	67 6d                	insl   (%dx),%es:(%edi)
  4004f7:	6f                   	outsl  %ds:(%rsi),(%dx)
  4004f8:	6e                   	outsb  %ds:(%rsi),(%dx)
  4004f9:	5f                   	pop    %rdi
  4004fa:	73 74                	jae    400570 <_init-0x1c8>
  4004fc:	61                   	(bad)  
  4004fd:	72 74                	jb     400573 <_init-0x1c5>
  4004ff:	5f                   	pop    %rdi
  400500:	5f                   	pop    %rdi
  400501:	00 47 4c             	add    %al,0x4c(%rdi)
  400504:	49                   	rex.WB
  400505:	42                   	rex.X
  400506:	43 5f                	rex.XB pop %r15
  400508:	32 2e                	xor    (%rsi),%ch
  40050a:	32 2e                	xor    (%rsi),%ch
  40050c:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

000000000040050e <.gnu.version>:
  40050e:	00 00                	add    %al,(%rax)
  400510:	02 00                	add    (%rax),%al
  400512:	02 00                	add    (%rax),%al
  400514:	02 00                	add    (%rax),%al
  400516:	02 00                	add    (%rax),%al
  400518:	02 00                	add    (%rax),%al
  40051a:	02 00                	add    (%rax),%al
  40051c:	02 00                	add    (%rax),%al
  40051e:	02 00                	add    (%rax),%al
  400520:	02 00                	add    (%rax),%al
  400522:	02 00                	add    (%rax),%al
  400524:	02 00                	add    (%rax),%al
  400526:	02 00                	add    (%rax),%al
  400528:	02 00                	add    (%rax),%al
  40052a:	00 00                	add    %al,(%rax)
  40052c:	02 00                	add    (%rax),%al
  40052e:	02 00                	add    (%rax),%al
  400530:	02 00                	add    (%rax),%al
  400532:	02 00                	add    (%rax),%al
  400534:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000400538 <.gnu.version_r>:
  400538:	01 00                	add    %eax,(%rax)
  40053a:	01 00                	add    %eax,(%rax)
  40053c:	01 00                	add    %eax,(%rax)
  40053e:	00 00                	add    %al,(%rax)
  400540:	10 00                	adc    %al,(%rax)
  400542:	00 00                	add    %al,(%rax)
  400544:	00 00                	add    %al,(%rax)
  400546:	00 00                	add    %al,(%rax)
  400548:	75 1a                	jne    400564 <_init-0x1d4>
  40054a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400550:	9a                   	(bad)  
  400551:	00 00                	add    %al,(%rax)
  400553:	00 00                	add    %al,(%rax)
  400555:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400558 <.rela.dyn>:
  400558:	78 1b                	js     400575 <_init-0x1c3>
  40055a:	60                   	(bad)  
  40055b:	00 00                	add    %al,(%rax)
  40055d:	00 00                	add    %al,(%rax)
  40055f:	00 06                	add    %al,(%rsi)
  400561:	00 00                	add    %al,(%rax)
  400563:	00 0e                	add    %cl,(%rsi)
	...
  40056d:	00 00                	add    %al,(%rax)
  40056f:	00 40 1c             	add    %al,0x1c(%rax)
  400572:	60                   	(bad)  
  400573:	00 00                	add    %al,(%rax)
  400575:	00 00                	add    %al,(%rax)
  400577:	00 05 00 00 00 13    	add    %al,0x13000000(%rip)        # 1340057d <_end+0x12dfe915>
	...

Disassembly of section .rela.plt:

0000000000400588 <.rela.plt>:
  400588:	98                   	cwtl   
  400589:	1b 60 00             	sbb    0x0(%rax),%esp
  40058c:	00 00                	add    %al,(%rax)
  40058e:	00 00                	add    %al,(%rax)
  400590:	07                   	(bad)  
  400591:	00 00                	add    %al,(%rax)
  400593:	00 01                	add    %al,(%rcx)
	...
  40059d:	00 00                	add    %al,(%rax)
  40059f:	00 a0 1b 60 00 00    	add    %ah,0x601b(%rax)
  4005a5:	00 00                	add    %al,(%rax)
  4005a7:	00 07                	add    %al,(%rdi)
  4005a9:	00 00                	add    %al,(%rax)
  4005ab:	00 02                	add    %al,(%rdx)
	...
  4005b5:	00 00                	add    %al,(%rax)
  4005b7:	00 a8 1b 60 00 00    	add    %ch,0x601b(%rax)
  4005bd:	00 00                	add    %al,(%rax)
  4005bf:	00 07                	add    %al,(%rdi)
  4005c1:	00 00                	add    %al,(%rax)
  4005c3:	00 03                	add    %al,(%rbx)
	...
  4005cd:	00 00                	add    %al,(%rax)
  4005cf:	00 b0 1b 60 00 00    	add    %dh,0x601b(%rax)
  4005d5:	00 00                	add    %al,(%rax)
  4005d7:	00 07                	add    %al,(%rdi)
  4005d9:	00 00                	add    %al,(%rax)
  4005db:	00 04 00             	add    %al,(%rax,%rax,1)
	...
  4005e6:	00 00                	add    %al,(%rax)
  4005e8:	b8 1b 60 00 00       	mov    $0x601b,%eax
  4005ed:	00 00                	add    %al,(%rax)
  4005ef:	00 07                	add    %al,(%rdi)
  4005f1:	00 00                	add    %al,(%rax)
  4005f3:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 4005f9 <_init-0x13f>
  4005f9:	00 00                	add    %al,(%rax)
  4005fb:	00 00                	add    %al,(%rax)
  4005fd:	00 00                	add    %al,(%rax)
  4005ff:	00 c0                	add    %al,%al
  400601:	1b 60 00             	sbb    0x0(%rax),%esp
  400604:	00 00                	add    %al,(%rax)
  400606:	00 00                	add    %al,(%rax)
  400608:	07                   	(bad)  
  400609:	00 00                	add    %al,(%rax)
  40060b:	00 06                	add    %al,(%rsi)
	...
  400615:	00 00                	add    %al,(%rax)
  400617:	00 c8                	add    %cl,%al
  400619:	1b 60 00             	sbb    0x0(%rax),%esp
  40061c:	00 00                	add    %al,(%rax)
  40061e:	00 00                	add    %al,(%rax)
  400620:	07                   	(bad)  
  400621:	00 00                	add    %al,(%rax)
  400623:	00 07                	add    %al,(%rdi)
	...
  40062d:	00 00                	add    %al,(%rax)
  40062f:	00 d0                	add    %dl,%al
  400631:	1b 60 00             	sbb    0x0(%rax),%esp
  400634:	00 00                	add    %al,(%rax)
  400636:	00 00                	add    %al,(%rax)
  400638:	07                   	(bad)  
  400639:	00 00                	add    %al,(%rax)
  40063b:	00 08                	add    %cl,(%rax)
	...
  400645:	00 00                	add    %al,(%rax)
  400647:	00 d8                	add    %bl,%al
  400649:	1b 60 00             	sbb    0x0(%rax),%esp
  40064c:	00 00                	add    %al,(%rax)
  40064e:	00 00                	add    %al,(%rax)
  400650:	07                   	(bad)  
  400651:	00 00                	add    %al,(%rax)
  400653:	00 09                	add    %cl,(%rcx)
	...
  40065d:	00 00                	add    %al,(%rax)
  40065f:	00 e0                	add    %ah,%al
  400661:	1b 60 00             	sbb    0x0(%rax),%esp
  400664:	00 00                	add    %al,(%rax)
  400666:	00 00                	add    %al,(%rax)
  400668:	07                   	(bad)  
  400669:	00 00                	add    %al,(%rax)
  40066b:	00 0a                	add    %cl,(%rdx)
	...
  400675:	00 00                	add    %al,(%rax)
  400677:	00 e8                	add    %ch,%al
  400679:	1b 60 00             	sbb    0x0(%rax),%esp
  40067c:	00 00                	add    %al,(%rax)
  40067e:	00 00                	add    %al,(%rax)
  400680:	07                   	(bad)  
  400681:	00 00                	add    %al,(%rax)
  400683:	00 0b                	add    %cl,(%rbx)
	...
  40068d:	00 00                	add    %al,(%rax)
  40068f:	00 f0                	add    %dh,%al
  400691:	1b 60 00             	sbb    0x0(%rax),%esp
  400694:	00 00                	add    %al,(%rax)
  400696:	00 00                	add    %al,(%rax)
  400698:	07                   	(bad)  
  400699:	00 00                	add    %al,(%rax)
  40069b:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
  4006a6:	00 00                	add    %al,(%rax)
  4006a8:	f8                   	clc    
  4006a9:	1b 60 00             	sbb    0x0(%rax),%esp
  4006ac:	00 00                	add    %al,(%rax)
  4006ae:	00 00                	add    %al,(%rax)
  4006b0:	07                   	(bad)  
  4006b1:	00 00                	add    %al,(%rax)
  4006b3:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 4006b9 <_init-0x7f>
	...
  4006c1:	1c 60                	sbb    $0x60,%al
  4006c3:	00 00                	add    %al,(%rax)
  4006c5:	00 00                	add    %al,(%rax)
  4006c7:	00 07                	add    %al,(%rdi)
  4006c9:	00 00                	add    %al,(%rax)
  4006cb:	00 0e                	add    %cl,(%rsi)
	...
  4006d5:	00 00                	add    %al,(%rax)
  4006d7:	00 08                	add    %cl,(%rax)
  4006d9:	1c 60                	sbb    $0x60,%al
  4006db:	00 00                	add    %al,(%rax)
  4006dd:	00 00                	add    %al,(%rax)
  4006df:	00 07                	add    %al,(%rdi)
  4006e1:	00 00                	add    %al,(%rax)
  4006e3:	00 0f                	add    %cl,(%rdi)
	...
  4006ed:	00 00                	add    %al,(%rax)
  4006ef:	00 10                	add    %dl,(%rax)
  4006f1:	1c 60                	sbb    $0x60,%al
  4006f3:	00 00                	add    %al,(%rax)
  4006f5:	00 00                	add    %al,(%rax)
  4006f7:	00 07                	add    %al,(%rdi)
  4006f9:	00 00                	add    %al,(%rax)
  4006fb:	00 10                	add    %dl,(%rax)
	...
  400705:	00 00                	add    %al,(%rax)
  400707:	00 18                	add    %bl,(%rax)
  400709:	1c 60                	sbb    $0x60,%al
  40070b:	00 00                	add    %al,(%rax)
  40070d:	00 00                	add    %al,(%rax)
  40070f:	00 07                	add    %al,(%rdi)
  400711:	00 00                	add    %al,(%rax)
  400713:	00 11                	add    %dl,(%rcx)
	...
  40071d:	00 00                	add    %al,(%rax)
  40071f:	00 20                	add    %ah,(%rax)
  400721:	1c 60                	sbb    $0x60,%al
  400723:	00 00                	add    %al,(%rax)
  400725:	00 00                	add    %al,(%rax)
  400727:	00 07                	add    %al,(%rdi)
  400729:	00 00                	add    %al,(%rax)
  40072b:	00 12                	add    %dl,(%rdx)
	...

Disassembly of section .init:

0000000000400738 <_init>:
  400738:	48 83 ec 08          	sub    $0x8,%rsp
  40073c:	48 8b 05 35 14 20 00 	mov    0x201435(%rip),%rax        # 601b78 <_DYNAMIC+0x1d0>
  400743:	48 85 c0             	test   %rax,%rax
  400746:	74 05                	je     40074d <_init+0x15>
  400748:	e8 f3 00 00 00       	callq  400840 <__gmon_start__@plt>
  40074d:	48 83 c4 08          	add    $0x8,%rsp
  400751:	c3                   	retq   

Disassembly of section .plt:

0000000000400760 <free@plt-0x10>:
  400760:	ff 35 22 14 20 00    	pushq  0x201422(%rip)        # 601b88 <_GLOBAL_OFFSET_TABLE_+0x8>
  400766:	ff 25 24 14 20 00    	jmpq   *0x201424(%rip)        # 601b90 <_GLOBAL_OFFSET_TABLE_+0x10>
  40076c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400770 <free@plt>:
  400770:	ff 25 22 14 20 00    	jmpq   *0x201422(%rip)        # 601b98 <_GLOBAL_OFFSET_TABLE_+0x18>
  400776:	68 00 00 00 00       	pushq  $0x0
  40077b:	e9 e0 ff ff ff       	jmpq   400760 <_init+0x28>

0000000000400780 <vsnprintf@plt>:
  400780:	ff 25 1a 14 20 00    	jmpq   *0x20141a(%rip)        # 601ba0 <_GLOBAL_OFFSET_TABLE_+0x20>
  400786:	68 01 00 00 00       	pushq  $0x1
  40078b:	e9 d0 ff ff ff       	jmpq   400760 <_init+0x28>

0000000000400790 <backtrace_symbols@plt>:
  400790:	ff 25 12 14 20 00    	jmpq   *0x201412(%rip)        # 601ba8 <_GLOBAL_OFFSET_TABLE_+0x28>
  400796:	68 02 00 00 00       	pushq  $0x2
  40079b:	e9 c0 ff ff ff       	jmpq   400760 <_init+0x28>

00000000004007a0 <write@plt>:
  4007a0:	ff 25 0a 14 20 00    	jmpq   *0x20140a(%rip)        # 601bb0 <_GLOBAL_OFFSET_TABLE_+0x30>
  4007a6:	68 03 00 00 00       	pushq  $0x3
  4007ab:	e9 b0 ff ff ff       	jmpq   400760 <_init+0x28>

00000000004007b0 <getpid@plt>:
  4007b0:	ff 25 02 14 20 00    	jmpq   *0x201402(%rip)        # 601bb8 <_GLOBAL_OFFSET_TABLE_+0x38>
  4007b6:	68 04 00 00 00       	pushq  $0x4
  4007bb:	e9 a0 ff ff ff       	jmpq   400760 <_init+0x28>

00000000004007c0 <ctime@plt>:
  4007c0:	ff 25 fa 13 20 00    	jmpq   *0x2013fa(%rip)        # 601bc0 <_GLOBAL_OFFSET_TABLE_+0x40>
  4007c6:	68 05 00 00 00       	pushq  $0x5
  4007cb:	e9 90 ff ff ff       	jmpq   400760 <_init+0x28>

00000000004007d0 <backtrace@plt>:
  4007d0:	ff 25 f2 13 20 00    	jmpq   *0x2013f2(%rip)        # 601bc8 <_GLOBAL_OFFSET_TABLE_+0x48>
  4007d6:	68 06 00 00 00       	pushq  $0x6
  4007db:	e9 80 ff ff ff       	jmpq   400760 <_init+0x28>

00000000004007e0 <snprintf@plt>:
  4007e0:	ff 25 ea 13 20 00    	jmpq   *0x2013ea(%rip)        # 601bd0 <_GLOBAL_OFFSET_TABLE_+0x50>
  4007e6:	68 07 00 00 00       	pushq  $0x7
  4007eb:	e9 70 ff ff ff       	jmpq   400760 <_init+0x28>

00000000004007f0 <nanosleep@plt>:
  4007f0:	ff 25 e2 13 20 00    	jmpq   *0x2013e2(%rip)        # 601bd8 <_GLOBAL_OFFSET_TABLE_+0x58>
  4007f6:	68 08 00 00 00       	pushq  $0x8
  4007fb:	e9 60 ff ff ff       	jmpq   400760 <_init+0x28>

0000000000400800 <memset@plt>:
  400800:	ff 25 da 13 20 00    	jmpq   *0x2013da(%rip)        # 601be0 <_GLOBAL_OFFSET_TABLE_+0x60>
  400806:	68 09 00 00 00       	pushq  $0x9
  40080b:	e9 50 ff ff ff       	jmpq   400760 <_init+0x28>

0000000000400810 <close@plt>:
  400810:	ff 25 d2 13 20 00    	jmpq   *0x2013d2(%rip)        # 601be8 <_GLOBAL_OFFSET_TABLE_+0x68>
  400816:	68 0a 00 00 00       	pushq  $0xa
  40081b:	e9 40 ff ff ff       	jmpq   400760 <_init+0x28>

0000000000400820 <__libc_start_main@plt>:
  400820:	ff 25 ca 13 20 00    	jmpq   *0x2013ca(%rip)        # 601bf0 <_GLOBAL_OFFSET_TABLE_+0x70>
  400826:	68 0b 00 00 00       	pushq  $0xb
  40082b:	e9 30 ff ff ff       	jmpq   400760 <_init+0x28>

0000000000400830 <calloc@plt>:
  400830:	ff 25 c2 13 20 00    	jmpq   *0x2013c2(%rip)        # 601bf8 <_GLOBAL_OFFSET_TABLE_+0x78>
  400836:	68 0c 00 00 00       	pushq  $0xc
  40083b:	e9 20 ff ff ff       	jmpq   400760 <_init+0x28>

0000000000400840 <__gmon_start__@plt>:
  400840:	ff 25 ba 13 20 00    	jmpq   *0x2013ba(%rip)        # 601c00 <_GLOBAL_OFFSET_TABLE_+0x80>
  400846:	68 0d 00 00 00       	pushq  $0xd
  40084b:	e9 10 ff ff ff       	jmpq   400760 <_init+0x28>

0000000000400850 <time@plt>:
  400850:	ff 25 b2 13 20 00    	jmpq   *0x2013b2(%rip)        # 601c08 <_GLOBAL_OFFSET_TABLE_+0x88>
  400856:	68 0e 00 00 00       	pushq  $0xe
  40085b:	e9 00 ff ff ff       	jmpq   400760 <_init+0x28>

0000000000400860 <open@plt>:
  400860:	ff 25 aa 13 20 00    	jmpq   *0x2013aa(%rip)        # 601c10 <_GLOBAL_OFFSET_TABLE_+0x90>
  400866:	68 0f 00 00 00       	pushq  $0xf
  40086b:	e9 f0 fe ff ff       	jmpq   400760 <_init+0x28>

0000000000400870 <exit@plt>:
  400870:	ff 25 a2 13 20 00    	jmpq   *0x2013a2(%rip)        # 601c18 <_GLOBAL_OFFSET_TABLE_+0x98>
  400876:	68 10 00 00 00       	pushq  $0x10
  40087b:	e9 e0 fe ff ff       	jmpq   400760 <_init+0x28>

0000000000400880 <fwrite@plt>:
  400880:	ff 25 9a 13 20 00    	jmpq   *0x20139a(%rip)        # 601c20 <_GLOBAL_OFFSET_TABLE_+0xa0>
  400886:	68 11 00 00 00       	pushq  $0x11
  40088b:	e9 d0 fe ff ff       	jmpq   400760 <_init+0x28>

Disassembly of section .text:

0000000000400890 <_start>:
  400890:	31 ed                	xor    %ebp,%ebp
  400892:	49 89 d1             	mov    %rdx,%r9
  400895:	5e                   	pop    %rsi
  400896:	48 89 e2             	mov    %rsp,%rdx
  400899:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40089d:	50                   	push   %rax
  40089e:	54                   	push   %rsp
  40089f:	49 c7 c0 e0 13 40 00 	mov    $0x4013e0,%r8
  4008a6:	48 c7 c1 70 13 40 00 	mov    $0x401370,%rcx
  4008ad:	48 c7 c7 c0 12 40 00 	mov    $0x4012c0,%rdi
  4008b4:	e8 67 ff ff ff       	callq  400820 <__libc_start_main@plt>
  4008b9:	f4                   	hlt    
  4008ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004008c0 <deregister_tm_clones>:
  4008c0:	b8 3f 1c 60 00       	mov    $0x601c3f,%eax
  4008c5:	55                   	push   %rbp
  4008c6:	48 2d 38 1c 60 00    	sub    $0x601c38,%rax
  4008cc:	48 83 f8 0e          	cmp    $0xe,%rax
  4008d0:	48 89 e5             	mov    %rsp,%rbp
  4008d3:	76 1b                	jbe    4008f0 <deregister_tm_clones+0x30>
  4008d5:	b8 00 00 00 00       	mov    $0x0,%eax
  4008da:	48 85 c0             	test   %rax,%rax
  4008dd:	74 11                	je     4008f0 <deregister_tm_clones+0x30>
  4008df:	5d                   	pop    %rbp
  4008e0:	bf 38 1c 60 00       	mov    $0x601c38,%edi
  4008e5:	ff e0                	jmpq   *%rax
  4008e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4008ee:	00 00 
  4008f0:	5d                   	pop    %rbp
  4008f1:	c3                   	retq   
  4008f2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  4008f9:	1f 84 00 00 00 00 00 

0000000000400900 <register_tm_clones>:
  400900:	be 38 1c 60 00       	mov    $0x601c38,%esi
  400905:	55                   	push   %rbp
  400906:	48 81 ee 38 1c 60 00 	sub    $0x601c38,%rsi
  40090d:	48 c1 fe 03          	sar    $0x3,%rsi
  400911:	48 89 e5             	mov    %rsp,%rbp
  400914:	48 89 f0             	mov    %rsi,%rax
  400917:	48 c1 e8 3f          	shr    $0x3f,%rax
  40091b:	48 01 c6             	add    %rax,%rsi
  40091e:	48 d1 fe             	sar    %rsi
  400921:	74 15                	je     400938 <register_tm_clones+0x38>
  400923:	b8 00 00 00 00       	mov    $0x0,%eax
  400928:	48 85 c0             	test   %rax,%rax
  40092b:	74 0b                	je     400938 <register_tm_clones+0x38>
  40092d:	5d                   	pop    %rbp
  40092e:	bf 38 1c 60 00       	mov    $0x601c38,%edi
  400933:	ff e0                	jmpq   *%rax
  400935:	0f 1f 00             	nopl   (%rax)
  400938:	5d                   	pop    %rbp
  400939:	c3                   	retq   
  40093a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400940 <__do_global_dtors_aux>:
  400940:	80 3d 01 13 20 00 00 	cmpb   $0x0,0x201301(%rip)        # 601c48 <completed.6661>
  400947:	75 11                	jne    40095a <__do_global_dtors_aux+0x1a>
  400949:	55                   	push   %rbp
  40094a:	48 89 e5             	mov    %rsp,%rbp
  40094d:	e8 6e ff ff ff       	callq  4008c0 <deregister_tm_clones>
  400952:	5d                   	pop    %rbp
  400953:	c6 05 ee 12 20 00 01 	movb   $0x1,0x2012ee(%rip)        # 601c48 <completed.6661>
  40095a:	f3 c3                	repz retq 
  40095c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400960 <frame_dummy>:
  400960:	bf a0 19 60 00       	mov    $0x6019a0,%edi
  400965:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400969:	75 05                	jne    400970 <frame_dummy+0x10>
  40096b:	eb 93                	jmp    400900 <register_tm_clones>
  40096d:	0f 1f 00             	nopl   (%rax)
  400970:	b8 00 00 00 00       	mov    $0x0,%eax
  400975:	48 85 c0             	test   %rax,%rax
  400978:	74 f1                	je     40096b <frame_dummy+0xb>
  40097a:	55                   	push   %rbp
  40097b:	48 89 e5             	mov    %rsp,%rbp
  40097e:	ff d0                	callq  *%rax
  400980:	5d                   	pop    %rbp
  400981:	e9 7a ff ff ff       	jmpq   400900 <register_tm_clones>

0000000000400986 <get_index>:
  400986:	55                   	push   %rbp
  400987:	48 89 e5             	mov    %rsp,%rbp
  40098a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  400991:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  400998:	8b 05 ba 12 20 00    	mov    0x2012ba(%rip),%eax        # 601c58 <logger+0x8>
  40099e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4009a1:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4009a4:	8d 50 01             	lea    0x1(%rax),%edx
  4009a7:	89 d0                	mov    %edx,%eax
  4009a9:	c1 f8 1f             	sar    $0x1f,%eax
  4009ac:	c1 e8 1b             	shr    $0x1b,%eax
  4009af:	01 c2                	add    %eax,%edx
  4009b1:	83 e2 1f             	and    $0x1f,%edx
  4009b4:	29 c2                	sub    %eax,%edx
  4009b6:	89 d0                	mov    %edx,%eax
  4009b8:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4009bb:	8b 55 f8             	mov    -0x8(%rbp),%edx
  4009be:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4009c1:	f0 0f b1 15 8f 12 20 	lock cmpxchg %edx,0x20128f(%rip)        # 601c58 <logger+0x8>
  4009c8:	00 
  4009c9:	0f 94 c0             	sete   %al
  4009cc:	83 f0 01             	xor    $0x1,%eax
  4009cf:	84 c0                	test   %al,%al
  4009d1:	75 c5                	jne    400998 <get_index+0x12>
  4009d3:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4009d6:	5d                   	pop    %rbp
  4009d7:	c3                   	retq   

00000000004009d8 <get_mode>:
  4009d8:	55                   	push   %rbp
  4009d9:	48 89 e5             	mov    %rsp,%rbp
  4009dc:	89 7d fc             	mov    %edi,-0x4(%rbp)
  4009df:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4009e2:	83 f8 01             	cmp    $0x1,%eax
  4009e5:	74 1e                	je     400a05 <get_mode+0x2d>
  4009e7:	83 f8 01             	cmp    $0x1,%eax
  4009ea:	7f 06                	jg     4009f2 <get_mode+0x1a>
  4009ec:	85 c0                	test   %eax,%eax
  4009ee:	74 0e                	je     4009fe <get_mode+0x26>
  4009f0:	eb 28                	jmp    400a1a <get_mode+0x42>
  4009f2:	83 f8 02             	cmp    $0x2,%eax
  4009f5:	74 15                	je     400a0c <get_mode+0x34>
  4009f7:	83 f8 03             	cmp    $0x3,%eax
  4009fa:	74 17                	je     400a13 <get_mode+0x3b>
  4009fc:	eb 1c                	jmp    400a1a <get_mode+0x42>
  4009fe:	b8 f8 13 40 00       	mov    $0x4013f8,%eax
  400a03:	eb 1a                	jmp    400a1f <get_mode+0x47>
  400a05:	b8 09 14 40 00       	mov    $0x401409,%eax
  400a0a:	eb 13                	jmp    400a1f <get_mode+0x47>
  400a0c:	b8 1d 14 40 00       	mov    $0x40141d,%eax
  400a11:	eb 0c                	jmp    400a1f <get_mode+0x47>
  400a13:	b8 2f 14 40 00       	mov    $0x40142f,%eax
  400a18:	eb 05                	jmp    400a1f <get_mode+0x47>
  400a1a:	b8 41 14 40 00       	mov    $0x401441,%eax
  400a1f:	5d                   	pop    %rbp
  400a20:	c3                   	retq   

0000000000400a21 <prepare_log>:
  400a21:	55                   	push   %rbp
  400a22:	48 89 e5             	mov    %rsp,%rbp
  400a25:	53                   	push   %rbx
  400a26:	48 83 ec 38          	sub    $0x38,%rsp
  400a2a:	89 7d cc             	mov    %edi,-0x34(%rbp)
  400a2d:	89 75 c8             	mov    %esi,-0x38(%rbp)
  400a30:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  400a34:	8b 45 c8             	mov    -0x38(%rbp),%eax
  400a37:	c1 e0 09             	shl    $0x9,%eax
  400a3a:	89 c0                	mov    %eax,%eax
  400a3c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400a40:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  400a47:	00 
  400a48:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  400a4f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
  400a53:	48 89 c7             	mov    %rax,%rdi
  400a56:	e8 f5 fd ff ff       	callq  400850 <time@plt>
  400a5b:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
  400a5f:	48 89 c7             	mov    %rax,%rdi
  400a62:	e8 59 fd ff ff       	callq  4007c0 <ctime@plt>
  400a67:	48 89 c3             	mov    %rax,%rbx
  400a6a:	8b 45 cc             	mov    -0x34(%rbp),%eax
  400a6d:	89 c7                	mov    %eax,%edi
  400a6f:	e8 64 ff ff ff       	callq  4009d8 <get_mode>
  400a74:	48 89 c1             	mov    %rax,%rcx
  400a77:	48 8b 15 d2 11 20 00 	mov    0x2011d2(%rip),%rdx        # 601c50 <logger>
  400a7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400a82:	48 01 d0             	add    %rdx,%rax
  400a85:	49 89 d8             	mov    %rbx,%r8
  400a88:	ba 55 14 40 00       	mov    $0x401455,%edx
  400a8d:	be 00 02 00 00       	mov    $0x200,%esi
  400a92:	48 89 c7             	mov    %rax,%rdi
  400a95:	b8 00 00 00 00       	mov    $0x0,%eax
  400a9a:	e8 41 fd ff ff       	callq  4007e0 <snprintf@plt>
  400a9f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  400aa2:	b8 00 02 00 00       	mov    $0x200,%eax
  400aa7:	2b 45 e4             	sub    -0x1c(%rbp),%eax
  400aaa:	89 c2                	mov    %eax,%edx
  400aac:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  400ab0:	89 10                	mov    %edx,(%rax)
  400ab2:	48 8b 05 97 11 20 00 	mov    0x201197(%rip),%rax        # 601c50 <logger>
  400ab9:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  400abc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  400ac0:	48 01 ca             	add    %rcx,%rdx
  400ac3:	48 01 d0             	add    %rdx,%rax
  400ac6:	48 83 c4 38          	add    $0x38,%rsp
  400aca:	5b                   	pop    %rbx
  400acb:	5d                   	pop    %rbp
  400acc:	c3                   	retq   

0000000000400acd <append_log>:
  400acd:	55                   	push   %rbp
  400ace:	48 89 e5             	mov    %rsp,%rbp
  400ad1:	48 83 ec 20          	sub    $0x20,%rsp
  400ad5:	89 7d ec             	mov    %edi,-0x14(%rbp)
  400ad8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  400adf:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  400ae6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  400aed:	8b 05 69 11 20 00    	mov    0x201169(%rip),%eax        # 601c5c <logger+0xc>
  400af3:	89 45 f8             	mov    %eax,-0x8(%rbp)
  400af6:	8b 45 f8             	mov    -0x8(%rbp),%eax
  400af9:	3b 45 ec             	cmp    -0x14(%rbp),%eax
  400afc:	73 0c                	jae    400b0a <append_log+0x3d>
  400afe:	8b 45 f8             	mov    -0x8(%rbp),%eax
  400b01:	8b 55 ec             	mov    -0x14(%rbp),%edx
  400b04:	29 c2                	sub    %eax,%edx
  400b06:	89 d0                	mov    %edx,%eax
  400b08:	eb 0d                	jmp    400b17 <append_log+0x4a>
  400b0a:	8b 45 f8             	mov    -0x8(%rbp),%eax
  400b0d:	8b 55 ec             	mov    -0x14(%rbp),%edx
  400b10:	29 c2                	sub    %eax,%edx
  400b12:	89 d0                	mov    %edx,%eax
  400b14:	83 c0 20             	add    $0x20,%eax
  400b17:	89 45 fc             	mov    %eax,-0x4(%rbp)
  400b1a:	83 7d fc 18          	cmpl   $0x18,-0x4(%rbp)
  400b1e:	74 02                	je     400b22 <append_log+0x55>
  400b20:	eb 4a                	jmp    400b6c <append_log+0x9f>
  400b22:	8b 55 fc             	mov    -0x4(%rbp),%edx
  400b25:	8b 45 f8             	mov    -0x8(%rbp),%eax
  400b28:	01 c2                	add    %eax,%edx
  400b2a:	89 d0                	mov    %edx,%eax
  400b2c:	c1 f8 1f             	sar    $0x1f,%eax
  400b2f:	c1 e8 1b             	shr    $0x1b,%eax
  400b32:	01 c2                	add    %eax,%edx
  400b34:	83 e2 1f             	and    $0x1f,%edx
  400b37:	29 c2                	sub    %eax,%edx
  400b39:	89 d0                	mov    %edx,%eax
  400b3b:	89 45 f4             	mov    %eax,-0xc(%rbp)
  400b3e:	8b 55 f4             	mov    -0xc(%rbp),%edx
  400b41:	8b 45 f8             	mov    -0x8(%rbp),%eax
  400b44:	f0 0f b1 15 10 11 20 	lock cmpxchg %edx,0x201110(%rip)        # 601c5c <logger+0xc>
  400b4b:	00 
  400b4c:	0f 94 c0             	sete   %al
  400b4f:	83 f0 01             	xor    $0x1,%eax
  400b52:	84 c0                	test   %al,%al
  400b54:	75 97                	jne    400aed <append_log+0x20>
  400b56:	8b 45 f4             	mov    -0xc(%rbp),%eax
  400b59:	48 63 d0             	movslq %eax,%rdx
  400b5c:	8b 45 f8             	mov    -0x8(%rbp),%eax
  400b5f:	48 98                	cltq   
  400b61:	48 89 d6             	mov    %rdx,%rsi
  400b64:	48 89 c7             	mov    %rax,%rdi
  400b67:	e8 02 00 00 00       	callq  400b6e <lilog_flush>
  400b6c:	c9                   	leaveq 
  400b6d:	c3                   	retq   

0000000000400b6e <lilog_flush>:
  400b6e:	55                   	push   %rbp
  400b6f:	48 89 e5             	mov    %rsp,%rbp
  400b72:	48 81 ec 50 30 00 00 	sub    $0x3050,%rsp
  400b79:	48 89 bd b8 cf ff ff 	mov    %rdi,-0x3048(%rbp)
  400b80:	48 89 b5 b0 cf ff ff 	mov    %rsi,-0x3050(%rbp)
  400b87:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  400b8e:	00 
  400b8f:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  400b96:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  400b9d:	00 
  400b9e:	48 c7 45 c8 80 96 98 	movq   $0x989680,-0x38(%rbp)
  400ba5:	00 
  400ba6:	48 8d 85 c0 cf ff ff 	lea    -0x3040(%rbp),%rax
  400bad:	ba 00 30 00 00       	mov    $0x3000,%edx
  400bb2:	be 00 00 00 00       	mov    $0x0,%esi
  400bb7:	48 89 c7             	mov    %rax,%rdi
  400bba:	e8 41 fc ff ff       	callq  400800 <memset@plt>
  400bbf:	eb 13                	jmp    400bd4 <lilog_flush+0x66>
  400bc1:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
  400bc5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  400bc9:	48 89 d6             	mov    %rdx,%rsi
  400bcc:	48 89 c7             	mov    %rax,%rdi
  400bcf:	e8 1c fc ff ff       	callq  4007f0 <nanosleep@plt>
  400bd4:	b8 00 00 00 00       	mov    $0x0,%eax
  400bd9:	ba 01 00 00 00       	mov    $0x1,%edx
  400bde:	f0 0f b1 15 7e 10 20 	lock cmpxchg %edx,0x20107e(%rip)        # 601c64 <logger+0x14>
  400be5:	00 
  400be6:	0f 94 c0             	sete   %al
  400be9:	83 f0 01             	xor    $0x1,%eax
  400bec:	84 c0                	test   %al,%al
  400bee:	75 d1                	jne    400bc1 <lilog_flush+0x53>
  400bf0:	48 8b 85 b8 cf ff ff 	mov    -0x3048(%rbp),%rax
  400bf7:	48 3b 85 b0 cf ff ff 	cmp    -0x3050(%rbp),%rax
  400bfe:	77 5c                	ja     400c5c <lilog_flush+0xee>
  400c00:	48 8b 85 b8 cf ff ff 	mov    -0x3048(%rbp),%rax
  400c07:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400c0b:	eb 3d                	jmp    400c4a <lilog_flush+0xdc>
  400c0d:	48 8b 05 3c 10 20 00 	mov    0x20103c(%rip),%rax        # 601c50 <logger>
  400c14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  400c18:	48 c1 e2 09          	shl    $0x9,%rdx
  400c1c:	48 01 c2             	add    %rax,%rdx
  400c1f:	48 8d 8d c0 cf ff ff 	lea    -0x3040(%rbp),%rcx
  400c26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400c2a:	48 01 c8             	add    %rcx,%rax
  400c2d:	be 00 02 00 00       	mov    $0x200,%esi
  400c32:	48 89 c7             	mov    %rax,%rdi
  400c35:	b8 00 00 00 00       	mov    $0x0,%eax
  400c3a:	e8 a1 fb ff ff       	callq  4007e0 <snprintf@plt>
  400c3f:	48 98                	cltq   
  400c41:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  400c45:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  400c4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400c4e:	48 3b 85 b0 cf ff ff 	cmp    -0x3050(%rbp),%rax
  400c55:	72 b6                	jb     400c0d <lilog_flush+0x9f>
  400c57:	e9 a5 00 00 00       	jmpq   400d01 <lilog_flush+0x193>
  400c5c:	48 8b 85 b8 cf ff ff 	mov    -0x3048(%rbp),%rax
  400c63:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400c67:	eb 3d                	jmp    400ca6 <lilog_flush+0x138>
  400c69:	48 8b 05 e0 0f 20 00 	mov    0x200fe0(%rip),%rax        # 601c50 <logger>
  400c70:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  400c74:	48 c1 e2 09          	shl    $0x9,%rdx
  400c78:	48 01 c2             	add    %rax,%rdx
  400c7b:	48 8d 8d c0 cf ff ff 	lea    -0x3040(%rbp),%rcx
  400c82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400c86:	48 01 c8             	add    %rcx,%rax
  400c89:	be 00 02 00 00       	mov    $0x200,%esi
  400c8e:	48 89 c7             	mov    %rax,%rdi
  400c91:	b8 00 00 00 00       	mov    $0x0,%eax
  400c96:	e8 45 fb ff ff       	callq  4007e0 <snprintf@plt>
  400c9b:	48 98                	cltq   
  400c9d:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  400ca1:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  400ca6:	48 83 7d e8 1f       	cmpq   $0x1f,-0x18(%rbp)
  400cab:	76 bc                	jbe    400c69 <lilog_flush+0xfb>
  400cad:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  400cb4:	00 
  400cb5:	eb 3d                	jmp    400cf4 <lilog_flush+0x186>
  400cb7:	48 8b 05 92 0f 20 00 	mov    0x200f92(%rip),%rax        # 601c50 <logger>
  400cbe:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  400cc2:	48 c1 e2 09          	shl    $0x9,%rdx
  400cc6:	48 01 c2             	add    %rax,%rdx
  400cc9:	48 8d 8d c0 cf ff ff 	lea    -0x3040(%rbp),%rcx
  400cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400cd4:	48 01 c8             	add    %rcx,%rax
  400cd7:	be 00 02 00 00       	mov    $0x200,%esi
  400cdc:	48 89 c7             	mov    %rax,%rdi
  400cdf:	b8 00 00 00 00       	mov    $0x0,%eax
  400ce4:	e8 f7 fa ff ff       	callq  4007e0 <snprintf@plt>
  400ce9:	48 98                	cltq   
  400ceb:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  400cef:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
  400cf4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400cf8:	48 3b 85 b0 cf ff ff 	cmp    -0x3050(%rbp),%rax
  400cff:	72 b6                	jb     400cb7 <lilog_flush+0x149>
  400d01:	8b 05 59 0f 20 00    	mov    0x200f59(%rip),%eax        # 601c60 <logger+0x10>
  400d07:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  400d0b:	48 8d 8d c0 cf ff ff 	lea    -0x3040(%rbp),%rcx
  400d12:	48 89 ce             	mov    %rcx,%rsi
  400d15:	89 c7                	mov    %eax,%edi
  400d17:	e8 84 fa ff ff       	callq  4007a0 <write@plt>
  400d1c:	89 45 dc             	mov    %eax,-0x24(%rbp)
  400d1f:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%rbp)
  400d23:	75 2a                	jne    400d4f <lilog_flush+0x1e1>
  400d25:	48 8b 05 14 0f 20 00 	mov    0x200f14(%rip),%rax        # 601c40 <stderr@@GLIBC_2.2.5>
  400d2c:	48 89 c1             	mov    %rax,%rcx
  400d2f:	ba 32 00 00 00       	mov    $0x32,%edx
  400d34:	be 01 00 00 00       	mov    $0x1,%esi
  400d39:	bf 60 14 40 00       	mov    $0x401460,%edi
  400d3e:	e8 3d fb ff ff       	callq  400880 <fwrite@plt>
  400d43:	c7 05 17 0f 20 00 00 	movl   $0x0,0x200f17(%rip)        # 601c64 <logger+0x14>
  400d4a:	00 00 00 
  400d4d:	eb 0a                	jmp    400d59 <lilog_flush+0x1eb>
  400d4f:	c7 05 0b 0f 20 00 00 	movl   $0x0,0x200f0b(%rip)        # 601c64 <logger+0x14>
  400d56:	00 00 00 
  400d59:	c9                   	leaveq 
  400d5a:	c3                   	retq   

0000000000400d5b <lilog>:
  400d5b:	55                   	push   %rbp
  400d5c:	48 89 e5             	mov    %rsp,%rbp
  400d5f:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
  400d66:	89 bd 1c ff ff ff    	mov    %edi,-0xe4(%rbp)
  400d6c:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  400d73:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  400d7a:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  400d81:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  400d88:	84 c0                	test   %al,%al
  400d8a:	74 20                	je     400dac <lilog+0x51>
  400d8c:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  400d90:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  400d94:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  400d98:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  400d9c:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  400da0:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  400da4:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  400da8:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  400dac:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  400db3:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
  400dba:	00 00 00 
  400dbd:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)
  400dc4:	00 00 00 
  400dc7:	b8 00 00 00 00       	mov    $0x0,%eax
  400dcc:	e8 b5 fb ff ff       	callq  400986 <get_index>
  400dd1:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
  400dd7:	48 8d 95 3c ff ff ff 	lea    -0xc4(%rbp),%rdx
  400dde:	8b 8d 48 ff ff ff    	mov    -0xb8(%rbp),%ecx
  400de4:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
  400dea:	89 ce                	mov    %ecx,%esi
  400dec:	89 c7                	mov    %eax,%edi
  400dee:	e8 2e fc ff ff       	callq  400a21 <prepare_log>
  400df3:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  400dfa:	c7 85 20 ff ff ff 10 	movl   $0x10,-0xe0(%rbp)
  400e01:	00 00 00 
  400e04:	c7 85 24 ff ff ff 30 	movl   $0x30,-0xdc(%rbp)
  400e0b:	00 00 00 
  400e0e:	48 8d 45 10          	lea    0x10(%rbp),%rax
  400e12:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  400e19:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  400e20:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
  400e27:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  400e2d:	48 63 f0             	movslq %eax,%rsi
  400e30:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  400e37:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
  400e3e:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  400e45:	48 89 c7             	mov    %rax,%rdi
  400e48:	e8 33 f9 ff ff       	callq  400780 <vsnprintf@plt>
  400e4d:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  400e53:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
  400e5a:	7e 46                	jle    400ea2 <lilog+0x147>
  400e5c:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  400e62:	2b 85 4c ff ff ff    	sub    -0xb4(%rbp),%eax
  400e68:	85 c0                	test   %eax,%eax
  400e6a:	7e 36                	jle    400ea2 <lilog+0x147>
  400e6c:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  400e72:	2b 85 4c ff ff ff    	sub    -0xb4(%rbp),%eax
  400e78:	48 98                	cltq   
  400e7a:	8b 95 4c ff ff ff    	mov    -0xb4(%rbp),%edx
  400e80:	48 63 ca             	movslq %edx,%rcx
  400e83:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  400e8a:	48 01 d1             	add    %rdx,%rcx
  400e8d:	ba 93 14 40 00       	mov    $0x401493,%edx
  400e92:	48 89 c6             	mov    %rax,%rsi
  400e95:	48 89 cf             	mov    %rcx,%rdi
  400e98:	b8 00 00 00 00       	mov    $0x0,%eax
  400e9d:	e8 3e f9 ff ff       	callq  4007e0 <snprintf@plt>
  400ea2:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
  400ea8:	89 c7                	mov    %eax,%edi
  400eaa:	e8 1e fc ff ff       	callq  400acd <append_log>
  400eaf:	c9                   	leaveq 
  400eb0:	c3                   	retq   

0000000000400eb1 <hello_msg>:
  400eb1:	55                   	push   %rbp
  400eb2:	48 89 e5             	mov    %rsp,%rbp
  400eb5:	53                   	push   %rbx
  400eb6:	48 81 ec 18 02 00 00 	sub    $0x218,%rsp
  400ebd:	48 89 bd e8 fd ff ff 	mov    %rdi,-0x218(%rbp)
  400ec4:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
  400ecb:	b8 00 00 00 00       	mov    $0x0,%eax
  400ed0:	b9 40 00 00 00       	mov    $0x40,%ecx
  400ed5:	48 89 d7             	mov    %rdx,%rdi
  400ed8:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  400edb:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
  400ee2:	48 8b 18             	mov    (%rax),%rbx
  400ee5:	e8 c6 f8 ff ff       	callq  4007b0 <getpid@plt>
  400eea:	89 c2                	mov    %eax,%edx
  400eec:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
  400ef3:	49 89 d8             	mov    %rbx,%r8
  400ef6:	89 d1                	mov    %edx,%ecx
  400ef8:	ba 98 14 40 00       	mov    $0x401498,%edx
  400efd:	be 00 02 00 00       	mov    $0x200,%esi
  400f02:	48 89 c7             	mov    %rax,%rdi
  400f05:	b8 00 00 00 00       	mov    $0x0,%eax
  400f0a:	e8 d1 f8 ff ff       	callq  4007e0 <snprintf@plt>
  400f0f:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
  400f16:	48 89 c6             	mov    %rax,%rsi
  400f19:	bf 00 00 00 00       	mov    $0x0,%edi
  400f1e:	b8 00 00 00 00       	mov    $0x0,%eax
  400f23:	e8 33 fe ff ff       	callq  400d5b <lilog>
  400f28:	48 81 c4 18 02 00 00 	add    $0x218,%rsp
  400f2f:	5b                   	pop    %rbx
  400f30:	5d                   	pop    %rbp
  400f31:	c3                   	retq   

0000000000400f32 <init_logger>:
  400f32:	55                   	push   %rbp
  400f33:	48 89 e5             	mov    %rsp,%rbp
  400f36:	48 81 ec 10 02 00 00 	sub    $0x210,%rsp
  400f3d:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  400f44:	48 89 b5 f0 fd ff ff 	mov    %rsi,-0x210(%rbp)
  400f4b:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
  400f52:	b8 00 00 00 00       	mov    $0x0,%eax
  400f57:	b9 40 00 00 00       	mov    $0x40,%ecx
  400f5c:	48 89 d7             	mov    %rdx,%rdi
  400f5f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  400f62:	be 00 40 00 00       	mov    $0x4000,%esi
  400f67:	bf 01 00 00 00       	mov    $0x1,%edi
  400f6c:	e8 bf f8 ff ff       	callq  400830 <calloc@plt>
  400f71:	48 89 05 d8 0c 20 00 	mov    %rax,0x200cd8(%rip)        # 601c50 <logger>
  400f78:	48 83 bd f0 fd ff ff 	cmpq   $0x0,-0x210(%rbp)
  400f7f:	00 
  400f80:	74 63                	je     400fe5 <init_logger+0xb3>
  400f82:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
  400f89:	ba b6 01 00 00       	mov    $0x1b6,%edx
  400f8e:	be 41 04 00 00       	mov    $0x441,%esi
  400f93:	48 89 c7             	mov    %rax,%rdi
  400f96:	b8 00 00 00 00       	mov    $0x0,%eax
  400f9b:	e8 c0 f8 ff ff       	callq  400860 <open@plt>
  400fa0:	89 05 ba 0c 20 00    	mov    %eax,0x200cba(%rip)        # 601c60 <logger+0x10>
  400fa6:	8b 05 b4 0c 20 00    	mov    0x200cb4(%rip),%eax        # 601c60 <logger+0x10>
  400fac:	83 f8 ff             	cmp    $0xffffffff,%eax
  400faf:	75 20                	jne    400fd1 <init_logger+0x9f>
  400fb1:	48 8b 05 88 0c 20 00 	mov    0x200c88(%rip),%rax        # 601c40 <stderr@@GLIBC_2.2.5>
  400fb8:	48 89 c1             	mov    %rax,%rcx
  400fbb:	ba 3b 00 00 00       	mov    $0x3b,%edx
  400fc0:	be 01 00 00 00       	mov    $0x1,%esi
  400fc5:	bf c0 14 40 00       	mov    $0x4014c0,%edi
  400fca:	e8 b1 f8 ff ff       	callq  400880 <fwrite@plt>
  400fcf:	eb 14                	jmp    400fe5 <init_logger+0xb3>
  400fd1:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
  400fd8:	48 89 c7             	mov    %rax,%rdi
  400fdb:	e8 d1 fe ff ff       	callq  400eb1 <hello_msg>
  400fe0:	e9 a0 00 00 00       	jmpq   401085 <init_logger+0x153>
  400fe5:	e8 c6 f7 ff ff       	callq  4007b0 <getpid@plt>
  400fea:	89 c1                	mov    %eax,%ecx
  400fec:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
  400ff3:	48 8b 00             	mov    (%rax),%rax
  400ff6:	48 8d 50 02          	lea    0x2(%rax),%rdx
  400ffa:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
  401001:	41 89 c8             	mov    %ecx,%r8d
  401004:	48 89 d1             	mov    %rdx,%rcx
  401007:	ba fc 14 40 00       	mov    $0x4014fc,%edx
  40100c:	be 00 02 00 00       	mov    $0x200,%esi
  401011:	48 89 c7             	mov    %rax,%rdi
  401014:	b8 00 00 00 00       	mov    $0x0,%eax
  401019:	e8 c2 f7 ff ff       	callq  4007e0 <snprintf@plt>
  40101e:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
  401025:	ba b6 01 00 00       	mov    $0x1b6,%edx
  40102a:	be 41 04 00 00       	mov    $0x441,%esi
  40102f:	48 89 c7             	mov    %rax,%rdi
  401032:	b8 00 00 00 00       	mov    $0x0,%eax
  401037:	e8 24 f8 ff ff       	callq  400860 <open@plt>
  40103c:	89 05 1e 0c 20 00    	mov    %eax,0x200c1e(%rip)        # 601c60 <logger+0x10>
  401042:	8b 05 18 0c 20 00    	mov    0x200c18(%rip),%eax        # 601c60 <logger+0x10>
  401048:	83 f8 ff             	cmp    $0xffffffff,%eax
  40104b:	75 28                	jne    401075 <init_logger+0x143>
  40104d:	48 8b 05 ec 0b 20 00 	mov    0x200bec(%rip),%rax        # 601c40 <stderr@@GLIBC_2.2.5>
  401054:	48 89 c1             	mov    %rax,%rcx
  401057:	ba 38 00 00 00       	mov    $0x38,%edx
  40105c:	be 01 00 00 00       	mov    $0x1,%esi
  401061:	bf 10 15 40 00       	mov    $0x401510,%edi
  401066:	e8 15 f8 ff ff       	callq  400880 <fwrite@plt>
  40106b:	bf ff ff ff ff       	mov    $0xffffffff,%edi
  401070:	e8 fb f7 ff ff       	callq  400870 <exit@plt>
  401075:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
  40107c:	48 89 c7             	mov    %rax,%rdi
  40107f:	e8 2d fe ff ff       	callq  400eb1 <hello_msg>
  401084:	90                   	nop
  401085:	c9                   	leaveq 
  401086:	c3                   	retq   

0000000000401087 <lilog_finish>:
  401087:	55                   	push   %rbp
  401088:	48 89 e5             	mov    %rsp,%rbp
  40108b:	53                   	push   %rbx
  40108c:	48 81 ec 28 02 00 00 	sub    $0x228,%rsp
  401093:	48 89 bd d8 fd ff ff 	mov    %rdi,-0x228(%rbp)
  40109a:	48 8d 95 e0 fd ff ff 	lea    -0x220(%rbp),%rdx
  4010a1:	b8 00 00 00 00       	mov    $0x0,%eax
  4010a6:	b9 40 00 00 00       	mov    $0x40,%ecx
  4010ab:	48 89 d7             	mov    %rdx,%rdi
  4010ae:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  4010b1:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
  4010b8:	48 8b 18             	mov    (%rax),%rbx
  4010bb:	e8 f0 f6 ff ff       	callq  4007b0 <getpid@plt>
  4010c0:	89 c2                	mov    %eax,%edx
  4010c2:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
  4010c9:	49 89 d8             	mov    %rbx,%r8
  4010cc:	89 d1                	mov    %edx,%ecx
  4010ce:	ba 50 15 40 00       	mov    $0x401550,%edx
  4010d3:	be 00 02 00 00       	mov    $0x200,%esi
  4010d8:	48 89 c7             	mov    %rax,%rdi
  4010db:	b8 00 00 00 00       	mov    $0x0,%eax
  4010e0:	e8 fb f6 ff ff       	callq  4007e0 <snprintf@plt>
  4010e5:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
  4010ec:	48 89 c6             	mov    %rax,%rsi
  4010ef:	bf 00 00 00 00       	mov    $0x0,%edi
  4010f4:	b8 00 00 00 00       	mov    $0x0,%eax
  4010f9:	e8 5d fc ff ff       	callq  400d5b <lilog>
  4010fe:	b8 00 00 00 00       	mov    $0x0,%eax
  401103:	e8 7e f8 ff ff       	callq  400986 <get_index>
  401108:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40110b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40110e:	48 98                	cltq   
  401110:	8b 15 46 0b 20 00    	mov    0x200b46(%rip),%edx        # 601c5c <logger+0xc>
  401116:	89 d2                	mov    %edx,%edx
  401118:	48 89 c6             	mov    %rax,%rsi
  40111b:	48 89 d7             	mov    %rdx,%rdi
  40111e:	e8 4b fa ff ff       	callq  400b6e <lilog_flush>
  401123:	8b 05 37 0b 20 00    	mov    0x200b37(%rip),%eax        # 601c60 <logger+0x10>
  401129:	89 c7                	mov    %eax,%edi
  40112b:	e8 e0 f6 ff ff       	callq  400810 <close@plt>
  401130:	48 81 c4 28 02 00 00 	add    $0x228,%rsp
  401137:	5b                   	pop    %rbx
  401138:	5d                   	pop    %rbp
  401139:	c3                   	retq   

000000000040113a <lilog_print_stack>:
  40113a:	55                   	push   %rbp
  40113b:	48 89 e5             	mov    %rsp,%rbp
  40113e:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  401145:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  40114c:	b8 00 00 00 00       	mov    $0x0,%eax
  401151:	b9 10 00 00 00       	mov    $0x10,%ecx
  401156:	48 89 d7             	mov    %rdx,%rdi
  401159:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  40115c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  401163:	00 
  401164:	c7 85 4c ff ff ff 00 	movl   $0x200,-0xb4(%rbp)
  40116b:	02 00 00 
  40116e:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  401175:	00 
  401176:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  40117d:	be 10 00 00 00       	mov    $0x10,%esi
  401182:	48 89 c7             	mov    %rax,%rdi
  401185:	e8 46 f6 ff ff       	callq  4007d0 <backtrace@plt>
  40118a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40118d:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  401190:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  401197:	89 d6                	mov    %edx,%esi
  401199:	48 89 c7             	mov    %rax,%rdi
  40119c:	e8 ef f5 ff ff       	callq  400790 <backtrace_symbols@plt>
  4011a1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4011a5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4011aa:	75 14                	jne    4011c0 <lilog_print_stack+0x86>
  4011ac:	be 83 15 40 00       	mov    $0x401583,%esi
  4011b1:	bf 03 00 00 00       	mov    $0x3,%edi
  4011b6:	b8 00 00 00 00       	mov    $0x0,%eax
  4011bb:	e8 9b fb ff ff       	callq  400d5b <lilog>
  4011c0:	b8 00 00 00 00       	mov    $0x0,%eax
  4011c5:	e8 bc f7 ff ff       	callq  400986 <get_index>
  4011ca:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4011cd:	8b 45 e0             	mov    -0x20(%rbp),%eax
  4011d0:	48 8d 95 4c ff ff ff 	lea    -0xb4(%rbp),%rdx
  4011d7:	89 c6                	mov    %eax,%esi
  4011d9:	bf 03 00 00 00       	mov    $0x3,%edi
  4011de:	e8 3e f8 ff ff       	callq  400a21 <prepare_log>
  4011e3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4011e7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  4011ee:	eb 5c                	jmp    40124c <lilog_print_stack+0x112>
  4011f0:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  4011f6:	48 98                	cltq   
  4011f8:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  4011fc:	74 4a                	je     401248 <lilog_print_stack+0x10e>
  4011fe:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401201:	48 98                	cltq   
  401203:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  40120a:	00 
  40120b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40120f:	48 01 d0             	add    %rdx,%rax
  401212:	48 8b 10             	mov    (%rax),%rdx
  401215:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
  40121b:	48 98                	cltq   
  40121d:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
  401221:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  401225:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  401229:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
  40122d:	48 89 d1             	mov    %rdx,%rcx
  401230:	ba 9b 15 40 00       	mov    $0x40159b,%edx
  401235:	48 89 c6             	mov    %rax,%rsi
  401238:	b8 00 00 00 00       	mov    $0x0,%eax
  40123d:	e8 9e f5 ff ff       	callq  4007e0 <snprintf@plt>
  401242:	48 98                	cltq   
  401244:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  401248:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  40124c:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40124f:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  401252:	7c 9c                	jl     4011f0 <lilog_print_stack+0xb6>
  401254:	8b 45 e0             	mov    -0x20(%rbp),%eax
  401257:	89 c7                	mov    %eax,%edi
  401259:	e8 6f f8 ff ff       	callq  400acd <append_log>
  40125e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401262:	48 89 c7             	mov    %rax,%rdi
  401265:	e8 06 f5 ff ff       	callq  400770 <free@plt>
  40126a:	c9                   	leaveq 
  40126b:	c3                   	retq   

000000000040126c <call3>:
  40126c:	55                   	push   %rbp
  40126d:	48 89 e5             	mov    %rsp,%rbp
  401270:	be 9f 15 40 00       	mov    $0x40159f,%esi
  401275:	bf 01 00 00 00       	mov    $0x1,%edi
  40127a:	b8 00 00 00 00       	mov    $0x0,%eax
  40127f:	e8 d7 fa ff ff       	callq  400d5b <lilog>
  401284:	b8 00 00 00 00       	mov    $0x0,%eax
  401289:	e8 ac fe ff ff       	callq  40113a <lilog_print_stack>
  40128e:	5d                   	pop    %rbp
  40128f:	c3                   	retq   

0000000000401290 <call2>:
  401290:	55                   	push   %rbp
  401291:	48 89 e5             	mov    %rsp,%rbp
  401294:	b8 00 00 00 00       	mov    $0x0,%eax
  401299:	e8 ce ff ff ff       	callq  40126c <call3>
  40129e:	5d                   	pop    %rbp
  40129f:	c3                   	retq   

00000000004012a0 <call1>:
  4012a0:	55                   	push   %rbp
  4012a1:	48 89 e5             	mov    %rsp,%rbp
  4012a4:	b8 00 00 00 00       	mov    $0x0,%eax
  4012a9:	e8 e2 ff ff ff       	callq  401290 <call2>
  4012ae:	5d                   	pop    %rbp
  4012af:	c3                   	retq   

00000000004012b0 <call0>:
  4012b0:	55                   	push   %rbp
  4012b1:	48 89 e5             	mov    %rsp,%rbp
  4012b4:	b8 00 00 00 00       	mov    $0x0,%eax
  4012b9:	e8 e2 ff ff ff       	callq  4012a0 <call1>
  4012be:	5d                   	pop    %rbp
  4012bf:	c3                   	retq   

00000000004012c0 <main>:
  4012c0:	55                   	push   %rbp
  4012c1:	48 89 e5             	mov    %rsp,%rbp
  4012c4:	48 83 ec 10          	sub    $0x10,%rsp
  4012c8:	89 7d fc             	mov    %edi,-0x4(%rbp)
  4012cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4012cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4012d3:	be 00 00 00 00       	mov    $0x0,%esi
  4012d8:	48 89 c7             	mov    %rax,%rdi
  4012db:	e8 52 fc ff ff       	callq  400f32 <init_logger>
  4012e0:	be b3 15 40 00       	mov    $0x4015b3,%esi
  4012e5:	bf 00 00 00 00       	mov    $0x0,%edi
  4012ea:	b8 00 00 00 00       	mov    $0x0,%eax
  4012ef:	e8 67 fa ff ff       	callq  400d5b <lilog>
  4012f4:	be bc 15 40 00       	mov    $0x4015bc,%esi
  4012f9:	bf 03 00 00 00       	mov    $0x3,%edi
  4012fe:	b8 00 00 00 00       	mov    $0x0,%eax
  401303:	e8 53 fa ff ff       	callq  400d5b <lilog>
  401308:	be c6 15 40 00       	mov    $0x4015c6,%esi
  40130d:	bf 00 00 00 00       	mov    $0x0,%edi
  401312:	b8 00 00 00 00       	mov    $0x0,%eax
  401317:	e8 3f fa ff ff       	callq  400d5b <lilog>
  40131c:	be d0 15 40 00       	mov    $0x4015d0,%esi
  401321:	bf 01 00 00 00       	mov    $0x1,%edi
  401326:	b8 00 00 00 00       	mov    $0x0,%eax
  40132b:	e8 2b fa ff ff       	callq  400d5b <lilog>
  401330:	ba e9 15 40 00       	mov    $0x4015e9,%edx
  401335:	be f0 15 40 00       	mov    $0x4015f0,%esi
  40133a:	bf 02 00 00 00       	mov    $0x2,%edi
  40133f:	b8 00 00 00 00       	mov    $0x0,%eax
  401344:	e8 12 fa ff ff       	callq  400d5b <lilog>
  401349:	b8 00 00 00 00       	mov    $0x0,%eax
  40134e:	e8 e7 fd ff ff       	callq  40113a <lilog_print_stack>
  401353:	b8 00 00 00 00       	mov    $0x0,%eax
  401358:	e8 53 ff ff ff       	callq  4012b0 <call0>
  40135d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401361:	48 89 c7             	mov    %rax,%rdi
  401364:	e8 1e fd ff ff       	callq  401087 <lilog_finish>
  401369:	b8 00 00 00 00       	mov    $0x0,%eax
  40136e:	c9                   	leaveq 
  40136f:	c3                   	retq   

0000000000401370 <__libc_csu_init>:
  401370:	41 57                	push   %r15
  401372:	41 89 ff             	mov    %edi,%r15d
  401375:	41 56                	push   %r14
  401377:	49 89 f6             	mov    %rsi,%r14
  40137a:	41 55                	push   %r13
  40137c:	49 89 d5             	mov    %rdx,%r13
  40137f:	41 54                	push   %r12
  401381:	4c 8d 25 08 06 20 00 	lea    0x200608(%rip),%r12        # 601990 <__frame_dummy_init_array_entry>
  401388:	55                   	push   %rbp
  401389:	48 8d 2d 08 06 20 00 	lea    0x200608(%rip),%rbp        # 601998 <__init_array_end>
  401390:	53                   	push   %rbx
  401391:	4c 29 e5             	sub    %r12,%rbp
  401394:	31 db                	xor    %ebx,%ebx
  401396:	48 c1 fd 03          	sar    $0x3,%rbp
  40139a:	48 83 ec 08          	sub    $0x8,%rsp
  40139e:	e8 95 f3 ff ff       	callq  400738 <_init>
  4013a3:	48 85 ed             	test   %rbp,%rbp
  4013a6:	74 1e                	je     4013c6 <__libc_csu_init+0x56>
  4013a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4013af:	00 
  4013b0:	4c 89 ea             	mov    %r13,%rdx
  4013b3:	4c 89 f6             	mov    %r14,%rsi
  4013b6:	44 89 ff             	mov    %r15d,%edi
  4013b9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4013bd:	48 83 c3 01          	add    $0x1,%rbx
  4013c1:	48 39 eb             	cmp    %rbp,%rbx
  4013c4:	75 ea                	jne    4013b0 <__libc_csu_init+0x40>
  4013c6:	48 83 c4 08          	add    $0x8,%rsp
  4013ca:	5b                   	pop    %rbx
  4013cb:	5d                   	pop    %rbp
  4013cc:	41 5c                	pop    %r12
  4013ce:	41 5d                	pop    %r13
  4013d0:	41 5e                	pop    %r14
  4013d2:	41 5f                	pop    %r15
  4013d4:	c3                   	retq   
  4013d5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4013dc:	00 00 00 00 

00000000004013e0 <__libc_csu_fini>:
  4013e0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004013e4 <_fini>:
  4013e4:	48 83 ec 08          	sub    $0x8,%rsp
  4013e8:	48 83 c4 08          	add    $0x8,%rsp
  4013ec:	c3                   	retq   

Disassembly of section .rodata:

00000000004013f0 <_IO_stdin_used>:
  4013f0:	01 00                	add    %eax,(%rax)
  4013f2:	02 00                	add    (%rax),%al
  4013f4:	00 00                	add    %al,(%rax)
  4013f6:	00 00                	add    %al,(%rax)
  4013f8:	1b 5b 33             	sbb    0x33(%rbx),%ebx
  4013fb:	37                   	(bad)  
  4013fc:	6d                   	insl   (%dx),%es:(%rdi)
  4013fd:	5b                   	pop    %rbx
  4013fe:	49                   	rex.WB
  4013ff:	4e                   	rex.WRX
  401400:	46                   	rex.RX
  401401:	4f 5d                	rex.WRXB pop %r13
  401403:	20 1b                	and    %bl,(%rbx)
  401405:	5b                   	pop    %rbx
  401406:	30 6d 00             	xor    %ch,0x0(%rbp)
  401409:	1b 5b 33             	sbb    0x33(%rbx),%ebx
  40140c:	34 6d                	xor    $0x6d,%al
  40140e:	5b                   	pop    %rbx
  40140f:	57                   	push   %rdi
  401410:	41 52                	push   %r10
  401412:	4e                   	rex.WRX
  401413:	49                   	rex.WB
  401414:	4e                   	rex.WRX
  401415:	47 5d                	rex.RXB pop %r13
  401417:	20 1b                	and    %bl,(%rbx)
  401419:	5b                   	pop    %rbx
  40141a:	30 6d 00             	xor    %ch,0x0(%rbp)
  40141d:	1b 5b 33             	sbb    0x33(%rbx),%ebx
  401420:	33 6d 5b             	xor    0x5b(%rbp),%ebp
  401423:	45 52                	rex.RB push %r10
  401425:	52                   	push   %rdx
  401426:	4f 52                	rex.WRXB push %r10
  401428:	5d                   	pop    %rbp
  401429:	20 1b                	and    %bl,(%rbx)
  40142b:	5b                   	pop    %rbx
  40142c:	30 6d 00             	xor    %ch,0x0(%rbp)
  40142f:	1b 5b 33             	sbb    0x33(%rbx),%ebx
  401432:	31 6d 5b             	xor    %ebp,0x5b(%rbp)
  401435:	44                   	rex.R
  401436:	45                   	rex.RB
  401437:	42 55                	rex.X push %rbp
  401439:	47 5d                	rex.RXB pop %r13
  40143b:	20 1b                	and    %bl,(%rbx)
  40143d:	5b                   	pop    %rbx
  40143e:	30 6d 00             	xor    %ch,0x0(%rbp)
  401441:	1b 5b 33             	sbb    0x33(%rbx),%ebx
  401444:	35 6d 5b 55 4e       	xor    $0x4e555b6d,%eax
  401449:	4b                   	rex.WXB
  40144a:	4e                   	rex.WRX
  40144b:	4f 57                	rex.WRXB push %r15
  40144d:	4e 5d                	rex.WRX pop %rbp
  40144f:	20 1b                	and    %bl,(%rbx)
  401451:	5b                   	pop    %rbx
  401452:	30 6d 00             	xor    %ch,0x0(%rbp)
  401455:	25 73 25 2e 32       	and    $0x322e2573,%eax
  40145a:	34 73                	xor    $0x73,%al
  40145c:	3a 20                	cmp    (%rax),%ah
  40145e:	00 00                	add    %al,(%rax)
  401460:	41 74 74             	rex.B je 4014d7 <_IO_stdin_used+0xe7>
  401463:	61                   	(bad)  
  401464:	63 68 65             	movslq 0x65(%rax),%ebp
  401467:	64 20 6c 6f 67       	and    %ch,%fs:0x67(%rdi,%rbp,2)
  40146c:	66 69 6c 65 20 69 73 	imul   $0x7369,0x20(%rbp,%riz,2),%bp
  401473:	20 64 65 61          	and    %ah,0x61(%rbp,%riz,2)
  401477:	64 2e 20 55 6e       	fs and %dl,%cs:0x6e(%rbp)
  40147c:	61                   	(bad)  
  40147d:	62                   	(bad)  
  40147e:	6c                   	insb   (%dx),%es:(%rdi)
  40147f:	65 20 74 6f 20       	and    %dh,%gs:0x20(%rdi,%rbp,2)
  401484:	77 72                	ja     4014f8 <_IO_stdin_used+0x108>
  401486:	69 74 65 20 69 6e 74 	imul   $0x6f746e69,0x20(%rbp,%riz,2),%esi
  40148d:	6f 
  40148e:	20 69 74             	and    %ch,0x74(%rcx)
  401491:	0a 00                	or     (%rax),%al
  401493:	0a 00                	or     (%rax),%al
  401495:	00 00                	add    %al,(%rax)
  401497:	00 50 72             	add    %dl,0x72(%rax)
  40149a:	6f                   	outsl  %ds:(%rsi),(%dx)
  40149b:	63 65 73             	movslq 0x73(%rbp),%esp
  40149e:	73 20                	jae    4014c0 <_IO_stdin_used+0xd0>
  4014a0:	23 25 64 2c 20 6e    	and    0x6e202c64(%rip),%esp        # 6e60410a <_end+0x6e0024a2>
  4014a6:	61                   	(bad)  
  4014a7:	6d                   	insl   (%dx),%es:(%rdi)
  4014a8:	65 64 20 25 73 20 73 	gs and %ah,%fs:0x74732073(%rip)        # 74b33523 <_end+0x745318bb>
  4014af:	74 
  4014b0:	61                   	(bad)  
  4014b1:	72 74                	jb     401527 <_IO_stdin_used+0x137>
  4014b3:	65 64 20 6c 6f 67    	gs and %ch,%fs:0x67(%rdi,%rbp,2)
  4014b9:	67 69 6e 67 00 00 00 	imul   $0x43000000,0x67(%esi),%ebp
  4014c0:	43 
  4014c1:	61                   	(bad)  
  4014c2:	6e                   	outsb  %ds:(%rsi),(%dx)
  4014c3:	6e                   	outsb  %ds:(%rsi),(%dx)
  4014c4:	6f                   	outsl  %ds:(%rsi),(%dx)
  4014c5:	74 20                	je     4014e7 <_IO_stdin_used+0xf7>
  4014c7:	6f                   	outsl  %ds:(%rsi),(%dx)
  4014c8:	70 65                	jo     40152f <_IO_stdin_used+0x13f>
  4014ca:	6e                   	outsb  %ds:(%rsi),(%dx)
  4014cb:	20 6c 6f 67          	and    %ch,0x67(%rdi,%rbp,2)
  4014cf:	66 69 6c 65 2e 20 54 	imul   $0x5420,0x2e(%rbp,%riz,2),%bp
  4014d6:	72 79                	jb     401551 <_IO_stdin_used+0x161>
  4014d8:	69 6e 67 20 74 6f 20 	imul   $0x206f7420,0x67(%rsi),%ebp
  4014df:	77 72                	ja     401553 <_IO_stdin_used+0x163>
  4014e1:	69 74 65 20 69 6e 74 	imul   $0x6f746e69,0x20(%rbp,%riz,2),%esi
  4014e8:	6f 
  4014e9:	20 73 74             	and    %dh,0x74(%rbx)
  4014ec:	61                   	(bad)  
  4014ed:	6e                   	outsb  %ds:(%rsi),(%dx)
  4014ee:	64 61                	fs (bad) 
  4014f0:	72 74                	jb     401566 <_IO_stdin_used+0x176>
  4014f2:	20 6c 6f 67          	and    %ch,0x67(%rdi,%rbp,2)
  4014f6:	66 69 6c 65 0a 00 2f 	imul   $0x2f00,0xa(%rbp,%riz,2),%bp
  4014fd:	74 6d                	je     40156c <_IO_stdin_used+0x17c>
  4014ff:	70 2f                	jo     401530 <_IO_stdin_used+0x140>
  401501:	25 73 2e 25 64       	and    $0x64252e73,%eax
  401506:	2e 6c                	cs insb (%dx),%es:(%rdi)
  401508:	6f                   	outsl  %ds:(%rsi),(%dx)
  401509:	67 00 00             	add    %al,(%eax)
  40150c:	00 00                	add    %al,(%rax)
  40150e:	00 00                	add    %al,(%rax)
  401510:	43 61                	rex.XB (bad) 
  401512:	6e                   	outsb  %ds:(%rsi),(%dx)
  401513:	6e                   	outsb  %ds:(%rsi),(%dx)
  401514:	6f                   	outsl  %ds:(%rsi),(%dx)
  401515:	74 20                	je     401537 <_IO_stdin_used+0x147>
  401517:	6f                   	outsl  %ds:(%rsi),(%dx)
  401518:	70 65                	jo     40157f <_IO_stdin_used+0x18f>
  40151a:	6e                   	outsb  %ds:(%rsi),(%dx)
  40151b:	20 6c 6f 67          	and    %ch,0x67(%rdi,%rbp,2)
  40151f:	66 69 6c 65 2e 54 72 	imul   $0x7254,0x2e(%rbp,%riz,2),%bp
  401526:	75 6c                	jne    401594 <_IO_stdin_used+0x1a4>
  401528:	79 20                	jns    40154a <_IO_stdin_used+0x15a>
  40152a:	62 61 64 20 74       	(bad)  
  40152f:	68 69 6e 67 73       	pushq  $0x73676e69
  401534:	20 68 61             	and    %ch,0x61(%rax)
  401537:	70 70                	jo     4015a9 <_IO_stdin_used+0x1b9>
  401539:	65 6e                	outsb  %gs:(%rsi),(%dx)
  40153b:	65 64 21 20          	gs and %esp,%fs:(%rax)
  40153f:	61                   	(bad)  
  401540:	62                   	(bad)  
  401541:	6f                   	outsl  %ds:(%rsi),(%dx)
  401542:	72 74                	jb     4015b8 <_IO_stdin_used+0x1c8>
  401544:	69 6e 67 0a 00 00 00 	imul   $0xa,0x67(%rsi),%ebp
  40154b:	00 00                	add    %al,(%rax)
  40154d:	00 00                	add    %al,(%rax)
  40154f:	00 50 72             	add    %dl,0x72(%rax)
  401552:	6f                   	outsl  %ds:(%rsi),(%dx)
  401553:	63 65 73             	movslq 0x73(%rbp),%esp
  401556:	73 20                	jae    401578 <_IO_stdin_used+0x188>
  401558:	23 25 64 2c 20 6e    	and    0x6e202c64(%rip),%esp        # 6e6041c2 <_end+0x6e00255a>
  40155e:	61                   	(bad)  
  40155f:	6d                   	insl   (%dx),%es:(%rdi)
  401560:	65 64 20 25 73 20 73 	gs and %ah,%fs:0x75732073(%rip)        # 75b335db <_end+0x75531973>
  401567:	75 
  401568:	63 63 65             	movslq 0x65(%rbx),%esp
  40156b:	73 66                	jae    4015d3 <_IO_stdin_used+0x1e3>
  40156d:	75 6c                	jne    4015db <_IO_stdin_used+0x1eb>
  40156f:	6c                   	insb   (%dx),%es:(%rdi)
  401570:	79 20                	jns    401592 <_IO_stdin_used+0x1a2>
  401572:	66 69 6e 69 73 68    	imul   $0x6873,0x69(%rsi),%bp
  401578:	65 64 20 6c 6f 67    	gs and %ch,%fs:0x67(%rdi,%rbp,2)
  40157e:	67 69 6e 67 00 55 6e 	imul   $0x616e5500,0x67(%esi),%ebp
  401585:	61 
  401586:	62                   	(bad)  
  401587:	6c                   	insb   (%dx),%es:(%rdi)
  401588:	65 20 74 6f 20       	and    %dh,%gs:0x20(%rdi,%rbp,2)
  40158d:	67 65 74 20          	addr32 gs je 4015b1 <_IO_stdin_used+0x1c1>
  401591:	62 61                	(bad)  
  401593:	63 6b 74             	movslq 0x74(%rbx),%ebp
  401596:	72 61                	jb     4015f9 <_IO_stdin_used+0x209>
  401598:	63 65 00             	movslq 0x0(%rbp),%esp
  40159b:	25 73 0a 00 43       	and    $0x43000a73,%eax
  4015a0:	6f                   	outsl  %ds:(%rsi),(%dx)
  4015a1:	6e                   	outsb  %ds:(%rsi),(%dx)
  4015a2:	64 69 74 69 6f 6e 20 	imul   $0x6166206e,%fs:0x6f(%rcx,%rbp,2),%esi
  4015a9:	66 61 
  4015ab:	6c                   	insb   (%dx),%es:(%rdi)
  4015ac:	69 65 64 3a 20 30 00 	imul   $0x30203a,0x64(%rbp),%esp
  4015b3:	53                   	push   %rbx
  4015b4:	75 63                	jne    401619 <_IO_stdin_used+0x229>
  4015b6:	68 20 6c 6f 67       	pushq  $0x676f6c20
  4015bb:	00 53 6f             	add    %dl,0x6f(%rbx)
  4015be:	20 75 73             	and    %dh,0x73(%rbp)
  4015c1:	65 66 75 6c          	gs data16 jne 401631 <_IO_stdin_used+0x241>
  4015c5:	00 53 55             	add    %dl,0x55(%rbx)
  4015c8:	43                   	rex.XB
  4015c9:	48 20 44 41 54       	rex.W and %al,0x54(%rcx,%rax,2)
  4015ce:	41 00 43 6f          	add    %al,0x6f(%r11)
  4015d2:	6e                   	outsb  %ds:(%rsi),(%dx)
  4015d3:	64 69 74 69 6f 6e 20 	imul   $0x6166206e,%fs:0x6f(%rcx,%rbp,2),%esi
  4015da:	66 61 
  4015dc:	6c                   	insb   (%dx),%es:(%rdi)
  4015dd:	69 65 64 3a 20 30 20 	imul   $0x2030203a,0x64(%rbp),%esp
  4015e4:	3c 20                	cmp    $0x20,%al
  4015e6:	2d 33 00 57 4f       	sub    $0x4f570033,%eax
  4015eb:	57                   	push   %rdi
  4015ec:	00 00                	add    %al,(%rax)
  4015ee:	00 00                	add    %al,(%rax)
  4015f0:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
  4015f2:	6e                   	outsb  %ds:(%rsi),(%dx)
  4015f3:	64 69 74 69 6f 6e 20 	imul   $0x6166206e,%fs:0x6f(%rcx,%rbp,2),%esi
  4015fa:	66 61 
  4015fc:	69 6c 65 64 3a 20 21 	imul   $0x2121203a,0x64(%rbp,%riz,2),%ebp
  401603:	21 
  401604:	30 20                	xor    %ah,(%rax)
  401606:	77 69                	ja     401671 <_IO_stdin_used+0x281>
  401608:	74 68                	je     401672 <_IO_stdin_used+0x282>
  40160a:	20 6d 73             	and    %ch,0x73(%rbp)
  40160d:	67 3a 20             	cmp    (%eax),%ah
  401610:	77 6f                	ja     401681 <_IO_stdin_used+0x291>
  401612:	77 20                	ja     401634 <_IO_stdin_used+0x244>
  401614:	25                   	.byte 0x25
  401615:	73 00                	jae    401617 <_IO_stdin_used+0x227>

Disassembly of section .eh_frame_hdr:

0000000000401618 <.eh_frame_hdr>:
  401618:	01 1b                	add    %ebx,(%rbx)
  40161a:	03 3b                	add    (%rbx),%edi
  40161c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
  40161d:	00 00                	add    %al,(%rax)
  40161f:	00 13                	add    %dl,(%rbx)
  401621:	00 00                	add    %al,(%rax)
  401623:	00 48 f1             	add    %cl,-0xf(%rax)
  401626:	ff                   	(bad)  
  401627:	ff f0                	push   %rax
  401629:	00 00                	add    %al,(%rax)
  40162b:	00 78 f2             	add    %bh,-0xe(%rax)
  40162e:	ff                   	(bad)  
  40162f:	ff c0                	inc    %eax
  401631:	00 00                	add    %al,(%rax)
  401633:	00 6e f3             	add    %ch,-0xd(%rsi)
  401636:	ff                   	(bad)  
  401637:	ff 18                	lcallq *(%rax)
  401639:	01 00                	add    %eax,(%rax)
  40163b:	00 c0                	add    %al,%al
  40163d:	f3 ff                	repz (bad) 
  40163f:	ff                   	(bad)  
  401640:	38 01                	cmp    %al,(%rcx)
  401642:	00 00                	add    %al,(%rax)
  401644:	09 f4                	or     %esi,%esp
  401646:	ff                   	(bad)  
  401647:	ff 58 01             	lcallq *0x1(%rax)
  40164a:	00 00                	add    %al,(%rax)
  40164c:	b5 f4                	mov    $0xf4,%ch
  40164e:	ff                   	(bad)  
  40164f:	ff 80 01 00 00 56    	incl   0x56000001(%rax)
  401655:	f5                   	cmc    
  401656:	ff                   	(bad)  
  401657:	ff a0 01 00 00 43    	jmpq   *0x43000001(%rax)
  40165d:	f7 ff                	idiv   %edi
  40165f:	ff c0                	inc    %eax
  401661:	01 00                	add    %eax,(%rax)
  401663:	00 99 f8 ff ff e0    	add    %bl,-0x1f000008(%rcx)
  401669:	01 00                	add    %eax,(%rax)
  40166b:	00 1a                	add    %bl,(%rdx)
  40166d:	f9                   	stc    
  40166e:	ff                   	(bad)  
  40166f:	ff 08                	decl   (%rax)
  401671:	02 00                	add    (%rax),%al
  401673:	00 6f fa             	add    %ch,-0x6(%rdi)
  401676:	ff                   	(bad)  
  401677:	ff 28                	ljmpq  *(%rax)
  401679:	02 00                	add    (%rax),%al
  40167b:	00 22                	add    %ah,(%rdx)
  40167d:	fb                   	sti    
  40167e:	ff                   	(bad)  
  40167f:	ff 50 02             	callq  *0x2(%rax)
  401682:	00 00                	add    %al,(%rax)
  401684:	54                   	push   %rsp
  401685:	fc                   	cld    
  401686:	ff                   	(bad)  
  401687:	ff 70 02             	pushq  0x2(%rax)
  40168a:	00 00                	add    %al,(%rax)
  40168c:	78 fc                	js     40168a <_IO_stdin_used+0x29a>
  40168e:	ff                   	(bad)  
  40168f:	ff 90 02 00 00 88    	callq  *-0x77fffffe(%rax)
  401695:	fc                   	cld    
  401696:	ff                   	(bad)  
  401697:	ff b0 02 00 00 98    	pushq  -0x67fffffe(%rax)
  40169d:	fc                   	cld    
  40169e:	ff                   	(bad)  
  40169f:	ff d0                	callq  *%rax
  4016a1:	02 00                	add    (%rax),%al
  4016a3:	00 a8 fc ff ff f0    	add    %ch,-0xf000004(%rax)
  4016a9:	02 00                	add    (%rax),%al
  4016ab:	00 58 fd             	add    %bl,-0x3(%rax)
  4016ae:	ff                   	(bad)  
  4016af:	ff 10                	callq  *(%rax)
  4016b1:	03 00                	add    (%rax),%eax
  4016b3:	00 c8                	add    %cl,%al
  4016b5:	fd                   	std    
  4016b6:	ff                   	(bad)  
  4016b7:	ff 58 03             	lcallq *0x3(%rax)
	...

Disassembly of section .eh_frame:

00000000004016c0 <__FRAME_END__-0x2c8>:
  4016c0:	14 00                	adc    $0x0,%al
  4016c2:	00 00                	add    %al,(%rax)
  4016c4:	00 00                	add    %al,(%rax)
  4016c6:	00 00                	add    %al,(%rax)
  4016c8:	01 7a 52             	add    %edi,0x52(%rdx)
  4016cb:	00 01                	add    %al,(%rcx)
  4016cd:	78 10                	js     4016df <_IO_stdin_used+0x2ef>
  4016cf:	01 1b                	add    %ebx,(%rbx)
  4016d1:	0c 07                	or     $0x7,%al
  4016d3:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  4016d9:	00 00                	add    %al,(%rax)
  4016db:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4016de:	00 00                	add    %al,(%rax)
  4016e0:	b0 f1                	mov    $0xf1,%al
  4016e2:	ff                   	(bad)  
  4016e3:	ff 2a                	ljmpq  *(%rdx)
	...
  4016ed:	00 00                	add    %al,(%rax)
  4016ef:	00 14 00             	add    %dl,(%rax,%rax,1)
  4016f2:	00 00                	add    %al,(%rax)
  4016f4:	00 00                	add    %al,(%rax)
  4016f6:	00 00                	add    %al,(%rax)
  4016f8:	01 7a 52             	add    %edi,0x52(%rdx)
  4016fb:	00 01                	add    %al,(%rcx)
  4016fd:	78 10                	js     40170f <_IO_stdin_used+0x31f>
  4016ff:	01 1b                	add    %ebx,(%rbx)
  401701:	0c 07                	or     $0x7,%al
  401703:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  401709:	00 00                	add    %al,(%rax)
  40170b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40170e:	00 00                	add    %al,(%rax)
  401710:	50                   	push   %rax
  401711:	f0 ff                	lock (bad) 
  401713:	ff 30                	pushq  (%rax)
  401715:	01 00                	add    %eax,(%rax)
  401717:	00 00                	add    %al,(%rax)
  401719:	0e                   	(bad)  
  40171a:	10 46 0e             	adc    %al,0xe(%rsi)
  40171d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  401720:	0b 77 08             	or     0x8(%rdi),%esi
  401723:	80 00 3f             	addb   $0x3f,(%rax)
  401726:	1a 3b                	sbb    (%rbx),%bh
  401728:	2a 33                	sub    (%rbx),%dh
  40172a:	24 22                	and    $0x22,%al
  40172c:	00 00                	add    %al,(%rax)
  40172e:	00 00                	add    %al,(%rax)
  401730:	1c 00                	sbb    $0x0,%al
  401732:	00 00                	add    %al,(%rax)
  401734:	44 00 00             	add    %r8b,(%rax)
  401737:	00 4e f2             	add    %cl,-0xe(%rsi)
  40173a:	ff                   	(bad)  
  40173b:	ff 52 00             	callq  *0x0(%rdx)
  40173e:	00 00                	add    %al,(%rax)
  401740:	00 41 0e             	add    %al,0xe(%rcx)
  401743:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  401749:	02 4d 0c             	add    0xc(%rbp),%cl
  40174c:	07                   	(bad)  
  40174d:	08 00                	or     %al,(%rax)
  40174f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  401752:	00 00                	add    %al,(%rax)
  401754:	64 00 00             	add    %al,%fs:(%rax)
  401757:	00 80 f2 ff ff 49    	add    %al,0x49fffff2(%rax)
  40175d:	00 00                	add    %al,(%rax)
  40175f:	00 00                	add    %al,(%rax)
  401761:	41 0e                	rex.B (bad) 
  401763:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  401769:	02 44 0c 07          	add    0x7(%rsp,%rcx,1),%al
  40176d:	08 00                	or     %al,(%rax)
  40176f:	00 24 00             	add    %ah,(%rax,%rax,1)
  401772:	00 00                	add    %al,(%rax)
  401774:	84 00                	test   %al,(%rax)
  401776:	00 00                	add    %al,(%rax)
  401778:	a9 f2 ff ff ac       	test   $0xacfffff2,%eax
  40177d:	00 00                	add    %al,(%rax)
  40177f:	00 00                	add    %al,(%rax)
  401781:	41 0e                	rex.B (bad) 
  401783:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  401789:	45 83 03 02          	rex.RB addl $0x2,(%r11)
  40178d:	a2 0c 07 08 00 00 00 	movabs %al,0x8070c
  401794:	00 00 
  401796:	00 00                	add    %al,(%rax)
  401798:	1c 00                	sbb    $0x0,%al
  40179a:	00 00                	add    %al,(%rax)
  40179c:	ac                   	lods   %ds:(%rsi),%al
  40179d:	00 00                	add    %al,(%rax)
  40179f:	00 2d f3 ff ff a1    	add    %ch,-0x5e00000d(%rip)        # ffffffffa2401798 <_end+0xffffffffa1dffb30>
  4017a5:	00 00                	add    %al,(%rax)
  4017a7:	00 00                	add    %al,(%rax)
  4017a9:	41 0e                	rex.B (bad) 
  4017ab:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4017b1:	02 9c 0c 07 08 00 00 	add    0x807(%rsp,%rcx,1),%bl
  4017b8:	1c 00                	sbb    $0x0,%al
  4017ba:	00 00                	add    %al,(%rax)
  4017bc:	cc                   	int3   
  4017bd:	00 00                	add    %al,(%rax)
  4017bf:	00 ae f3 ff ff ed    	add    %ch,-0x1200000d(%rsi)
  4017c5:	01 00                	add    %eax,(%rax)
  4017c7:	00 00                	add    %al,(%rax)
  4017c9:	41 0e                	rex.B (bad) 
  4017cb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4017d1:	03 e8                	add    %eax,%ebp
  4017d3:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
  4017d6:	08 00                	or     %al,(%rax)
  4017d8:	1c 00                	sbb    $0x0,%al
  4017da:	00 00                	add    %al,(%rax)
  4017dc:	ec                   	in     (%dx),%al
  4017dd:	00 00                	add    %al,(%rax)
  4017df:	00 7b f5             	add    %bh,-0xb(%rbx)
  4017e2:	ff                   	(bad)  
  4017e3:	ff 56 01             	callq  *0x1(%rsi)
  4017e6:	00 00                	add    %al,(%rax)
  4017e8:	00 41 0e             	add    %al,0xe(%rcx)
  4017eb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4017f1:	03 51 01             	add    0x1(%rcx),%edx
  4017f4:	0c 07                	or     $0x7,%al
  4017f6:	08 00                	or     %al,(%rax)
  4017f8:	24 00                	and    $0x0,%al
  4017fa:	00 00                	add    %al,(%rax)
  4017fc:	0c 01                	or     $0x1,%al
  4017fe:	00 00                	add    %al,(%rax)
  401800:	b1 f6                	mov    $0xf6,%cl
  401802:	ff                   	(bad)  
  401803:	ff 81 00 00 00 00    	incl   0x0(%rcx)
  401809:	41 0e                	rex.B (bad) 
  40180b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  401811:	48 83 03 02          	addq   $0x2,(%rbx)
  401815:	74 0c                	je     401823 <_IO_stdin_used+0x433>
  401817:	07                   	(bad)  
  401818:	08 00                	or     %al,(%rax)
  40181a:	00 00                	add    %al,(%rax)
  40181c:	00 00                	add    %al,(%rax)
  40181e:	00 00                	add    %al,(%rax)
  401820:	1c 00                	sbb    $0x0,%al
  401822:	00 00                	add    %al,(%rax)
  401824:	34 01                	xor    $0x1,%al
  401826:	00 00                	add    %al,(%rax)
  401828:	0a f7                	or     %bh,%dh
  40182a:	ff                   	(bad)  
  40182b:	ff 55 01             	callq  *0x1(%rbp)
  40182e:	00 00                	add    %al,(%rax)
  401830:	00 41 0e             	add    %al,0xe(%rcx)
  401833:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  401839:	03 50 01             	add    0x1(%rax),%edx
  40183c:	0c 07                	or     $0x7,%al
  40183e:	08 00                	or     %al,(%rax)
  401840:	24 00                	and    $0x0,%al
  401842:	00 00                	add    %al,(%rax)
  401844:	54                   	push   %rsp
  401845:	01 00                	add    %eax,(%rax)
  401847:	00 3f                	add    %bh,(%rdi)
  401849:	f8                   	clc    
  40184a:	ff                   	(bad)  
  40184b:	ff b3 00 00 00 00    	pushq  0x0(%rbx)
  401851:	41 0e                	rex.B (bad) 
  401853:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  401859:	48 83 03 02          	addq   $0x2,(%rbx)
  40185d:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
  40185e:	0c 07                	or     $0x7,%al
  401860:	08 00                	or     %al,(%rax)
  401862:	00 00                	add    %al,(%rax)
  401864:	00 00                	add    %al,(%rax)
  401866:	00 00                	add    %al,(%rax)
  401868:	1c 00                	sbb    $0x0,%al
  40186a:	00 00                	add    %al,(%rax)
  40186c:	7c 01                	jl     40186f <_IO_stdin_used+0x47f>
  40186e:	00 00                	add    %al,(%rax)
  401870:	ca f8 ff             	lret   $0xfff8
  401873:	ff 32                	pushq  (%rdx)
  401875:	01 00                	add    %eax,(%rax)
  401877:	00 00                	add    %al,(%rax)
  401879:	41 0e                	rex.B (bad) 
  40187b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  401881:	03 2d 01 0c 07 08    	add    0x8070c01(%rip),%ebp        # 8472488 <_end+0x7e70820>
  401887:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40188a:	00 00                	add    %al,(%rax)
  40188c:	9c                   	pushfq 
  40188d:	01 00                	add    %eax,(%rax)
  40188f:	00 dc                	add    %bl,%ah
  401891:	f9                   	stc    
  401892:	ff                   	(bad)  
  401893:	ff 24 00             	jmpq   *(%rax,%rax,1)
  401896:	00 00                	add    %al,(%rax)
  401898:	00 41 0e             	add    %al,0xe(%rcx)
  40189b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4018a1:	5f                   	pop    %rdi
  4018a2:	0c 07                	or     $0x7,%al
  4018a4:	08 00                	or     %al,(%rax)
  4018a6:	00 00                	add    %al,(%rax)
  4018a8:	1c 00                	sbb    $0x0,%al
  4018aa:	00 00                	add    %al,(%rax)
  4018ac:	bc 01 00 00 e0       	mov    $0xe0000001,%esp
  4018b1:	f9                   	stc    
  4018b2:	ff                   	(bad)  
  4018b3:	ff 10                	callq  *(%rax)
  4018b5:	00 00                	add    %al,(%rax)
  4018b7:	00 00                	add    %al,(%rax)
  4018b9:	41 0e                	rex.B (bad) 
  4018bb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4018c1:	4b 0c 07             	rex.WXB or $0x7,%al
  4018c4:	08 00                	or     %al,(%rax)
  4018c6:	00 00                	add    %al,(%rax)
  4018c8:	1c 00                	sbb    $0x0,%al
  4018ca:	00 00                	add    %al,(%rax)
  4018cc:	dc 01                	faddl  (%rcx)
  4018ce:	00 00                	add    %al,(%rax)
  4018d0:	d0 f9                	sar    %cl
  4018d2:	ff                   	(bad)  
  4018d3:	ff 10                	callq  *(%rax)
  4018d5:	00 00                	add    %al,(%rax)
  4018d7:	00 00                	add    %al,(%rax)
  4018d9:	41 0e                	rex.B (bad) 
  4018db:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4018e1:	4b 0c 07             	rex.WXB or $0x7,%al
  4018e4:	08 00                	or     %al,(%rax)
  4018e6:	00 00                	add    %al,(%rax)
  4018e8:	1c 00                	sbb    $0x0,%al
  4018ea:	00 00                	add    %al,(%rax)
  4018ec:	fc                   	cld    
  4018ed:	01 00                	add    %eax,(%rax)
  4018ef:	00 c0                	add    %al,%al
  4018f1:	f9                   	stc    
  4018f2:	ff                   	(bad)  
  4018f3:	ff 10                	callq  *(%rax)
  4018f5:	00 00                	add    %al,(%rax)
  4018f7:	00 00                	add    %al,(%rax)
  4018f9:	41 0e                	rex.B (bad) 
  4018fb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  401901:	4b 0c 07             	rex.WXB or $0x7,%al
  401904:	08 00                	or     %al,(%rax)
  401906:	00 00                	add    %al,(%rax)
  401908:	1c 00                	sbb    $0x0,%al
  40190a:	00 00                	add    %al,(%rax)
  40190c:	1c 02                	sbb    $0x2,%al
  40190e:	00 00                	add    %al,(%rax)
  401910:	b0 f9                	mov    $0xf9,%al
  401912:	ff                   	(bad)  
  401913:	ff b0 00 00 00 00    	pushq  0x0(%rax)
  401919:	41 0e                	rex.B (bad) 
  40191b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  401921:	02 ab 0c 07 08 00    	add    0x8070c(%rbx),%ch
  401927:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
  40192b:	00 3c 02             	add    %bh,(%rdx,%rax,1)
  40192e:	00 00                	add    %al,(%rax)
  401930:	40 fa                	rex cli 
  401932:	ff                   	(bad)  
  401933:	ff 65 00             	jmpq   *0x0(%rbp)
  401936:	00 00                	add    %al,(%rax)
  401938:	00 42 0e             	add    %al,0xe(%rdx)
  40193b:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
  401941:	8e 03                	mov    (%rbx),%es
  401943:	45 0e                	rex.RB (bad) 
  401945:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
  40194b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86702799 <_end+0xffffffff86100b31>
  401951:	06                   	(bad)  
  401952:	48 0e                	rex.W (bad) 
  401954:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  40195a:	6c                   	insb   (%dx),%es:(%rdi)
  40195b:	0e                   	(bad)  
  40195c:	38 41 0e             	cmp    %al,0xe(%rcx)
  40195f:	30 41 0e             	xor    %al,0xe(%rcx)
  401962:	28 42 0e             	sub    %al,0xe(%rdx)
  401965:	20 42 0e             	and    %al,0xe(%rdx)
  401968:	18 42 0e             	sbb    %al,0xe(%rdx)
  40196b:	10 42 0e             	adc    %al,0xe(%rdx)
  40196e:	08 00                	or     %al,(%rax)
  401970:	14 00                	adc    $0x0,%al
  401972:	00 00                	add    %al,(%rax)
  401974:	84 02                	test   %al,(%rdx)
  401976:	00 00                	add    %al,(%rax)
  401978:	68 fa ff ff 02       	pushq  $0x2fffffa
	...

0000000000401988 <__FRAME_END__>:
  401988:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000601990 <__frame_dummy_init_array_entry>:
  601990:	60                   	(bad)  
  601991:	09 40 00             	or     %eax,0x0(%rax)
  601994:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000601998 <__do_global_dtors_aux_fini_array_entry>:
  601998:	40 09 40 00          	rex or %eax,0x0(%rax)
  60199c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .jcr:

00000000006019a0 <__JCR_END__>:
	...

Disassembly of section .dynamic:

00000000006019a8 <_DYNAMIC>:
  6019a8:	01 00                	add    %eax,(%rax)
  6019aa:	00 00                	add    %al,(%rax)
  6019ac:	00 00                	add    %al,(%rax)
  6019ae:	00 00                	add    %al,(%rax)
  6019b0:	01 00                	add    %eax,(%rax)
  6019b2:	00 00                	add    %al,(%rax)
  6019b4:	00 00                	add    %al,(%rax)
  6019b6:	00 00                	add    %al,(%rax)
  6019b8:	0c 00                	or     $0x0,%al
  6019ba:	00 00                	add    %al,(%rax)
  6019bc:	00 00                	add    %al,(%rax)
  6019be:	00 00                	add    %al,(%rax)
  6019c0:	38 07                	cmp    %al,(%rdi)
  6019c2:	40 00 00             	add    %al,(%rax)
  6019c5:	00 00                	add    %al,(%rax)
  6019c7:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 6019cd <_DYNAMIC+0x25>
  6019cd:	00 00                	add    %al,(%rax)
  6019cf:	00 e4                	add    %ah,%ah
  6019d1:	13 40 00             	adc    0x0(%rax),%eax
  6019d4:	00 00                	add    %al,(%rax)
  6019d6:	00 00                	add    %al,(%rax)
  6019d8:	19 00                	sbb    %eax,(%rax)
  6019da:	00 00                	add    %al,(%rax)
  6019dc:	00 00                	add    %al,(%rax)
  6019de:	00 00                	add    %al,(%rax)
  6019e0:	90                   	nop
  6019e1:	19 60 00             	sbb    %esp,0x0(%rax)
  6019e4:	00 00                	add    %al,(%rax)
  6019e6:	00 00                	add    %al,(%rax)
  6019e8:	1b 00                	sbb    (%rax),%eax
  6019ea:	00 00                	add    %al,(%rax)
  6019ec:	00 00                	add    %al,(%rax)
  6019ee:	00 00                	add    %al,(%rax)
  6019f0:	08 00                	or     %al,(%rax)
  6019f2:	00 00                	add    %al,(%rax)
  6019f4:	00 00                	add    %al,(%rax)
  6019f6:	00 00                	add    %al,(%rax)
  6019f8:	1a 00                	sbb    (%rax),%al
  6019fa:	00 00                	add    %al,(%rax)
  6019fc:	00 00                	add    %al,(%rax)
  6019fe:	00 00                	add    %al,(%rax)
  601a00:	98                   	cwtl   
  601a01:	19 60 00             	sbb    %esp,0x0(%rax)
  601a04:	00 00                	add    %al,(%rax)
  601a06:	00 00                	add    %al,(%rax)
  601a08:	1c 00                	sbb    $0x0,%al
  601a0a:	00 00                	add    %al,(%rax)
  601a0c:	00 00                	add    %al,(%rax)
  601a0e:	00 00                	add    %al,(%rax)
  601a10:	08 00                	or     %al,(%rax)
  601a12:	00 00                	add    %al,(%rax)
  601a14:	00 00                	add    %al,(%rax)
  601a16:	00 00                	add    %al,(%rax)
  601a18:	f5                   	cmc    
  601a19:	fe                   	(bad)  
  601a1a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  601a1d:	00 00                	add    %al,(%rax)
  601a1f:	00 60 02             	add    %ah,0x2(%rax)
  601a22:	40 00 00             	add    %al,(%rax)
  601a25:	00 00                	add    %al,(%rax)
  601a27:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 601a2d <_DYNAMIC+0x85>
  601a2d:	00 00                	add    %al,(%rax)
  601a2f:	00 68 04             	add    %ch,0x4(%rax)
  601a32:	40 00 00             	add    %al,(%rax)
  601a35:	00 00                	add    %al,(%rax)
  601a37:	00 06                	add    %al,(%rsi)
  601a39:	00 00                	add    %al,(%rax)
  601a3b:	00 00                	add    %al,(%rax)
  601a3d:	00 00                	add    %al,(%rax)
  601a3f:	00 88 02 40 00 00    	add    %cl,0x4002(%rax)
  601a45:	00 00                	add    %al,(%rax)
  601a47:	00 0a                	add    %cl,(%rdx)
  601a49:	00 00                	add    %al,(%rax)
  601a4b:	00 00                	add    %al,(%rax)
  601a4d:	00 00                	add    %al,(%rax)
  601a4f:	00 a6 00 00 00 00    	add    %ah,0x0(%rsi)
  601a55:	00 00                	add    %al,(%rax)
  601a57:	00 0b                	add    %cl,(%rbx)
  601a59:	00 00                	add    %al,(%rax)
  601a5b:	00 00                	add    %al,(%rax)
  601a5d:	00 00                	add    %al,(%rax)
  601a5f:	00 18                	add    %bl,(%rax)
  601a61:	00 00                	add    %al,(%rax)
  601a63:	00 00                	add    %al,(%rax)
  601a65:	00 00                	add    %al,(%rax)
  601a67:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 601a6d <_DYNAMIC+0xc5>
	...
  601a75:	00 00                	add    %al,(%rax)
  601a77:	00 03                	add    %al,(%rbx)
  601a79:	00 00                	add    %al,(%rax)
  601a7b:	00 00                	add    %al,(%rax)
  601a7d:	00 00                	add    %al,(%rax)
  601a7f:	00 80 1b 60 00 00    	add    %al,0x601b(%rax)
  601a85:	00 00                	add    %al,(%rax)
  601a87:	00 02                	add    %al,(%rdx)
  601a89:	00 00                	add    %al,(%rax)
  601a8b:	00 00                	add    %al,(%rax)
  601a8d:	00 00                	add    %al,(%rax)
  601a8f:	00 b0 01 00 00 00    	add    %dh,0x1(%rax)
  601a95:	00 00                	add    %al,(%rax)
  601a97:	00 14 00             	add    %dl,(%rax,%rax,1)
  601a9a:	00 00                	add    %al,(%rax)
  601a9c:	00 00                	add    %al,(%rax)
  601a9e:	00 00                	add    %al,(%rax)
  601aa0:	07                   	(bad)  
  601aa1:	00 00                	add    %al,(%rax)
  601aa3:	00 00                	add    %al,(%rax)
  601aa5:	00 00                	add    %al,(%rax)
  601aa7:	00 17                	add    %dl,(%rdi)
  601aa9:	00 00                	add    %al,(%rax)
  601aab:	00 00                	add    %al,(%rax)
  601aad:	00 00                	add    %al,(%rax)
  601aaf:	00 88 05 40 00 00    	add    %cl,0x4005(%rax)
  601ab5:	00 00                	add    %al,(%rax)
  601ab7:	00 07                	add    %al,(%rdi)
  601ab9:	00 00                	add    %al,(%rax)
  601abb:	00 00                	add    %al,(%rax)
  601abd:	00 00                	add    %al,(%rax)
  601abf:	00 58 05             	add    %bl,0x5(%rax)
  601ac2:	40 00 00             	add    %al,(%rax)
  601ac5:	00 00                	add    %al,(%rax)
  601ac7:	00 08                	add    %cl,(%rax)
  601ac9:	00 00                	add    %al,(%rax)
  601acb:	00 00                	add    %al,(%rax)
  601acd:	00 00                	add    %al,(%rax)
  601acf:	00 30                	add    %dh,(%rax)
  601ad1:	00 00                	add    %al,(%rax)
  601ad3:	00 00                	add    %al,(%rax)
  601ad5:	00 00                	add    %al,(%rax)
  601ad7:	00 09                	add    %cl,(%rcx)
  601ad9:	00 00                	add    %al,(%rax)
  601adb:	00 00                	add    %al,(%rax)
  601add:	00 00                	add    %al,(%rax)
  601adf:	00 18                	add    %bl,(%rax)
  601ae1:	00 00                	add    %al,(%rax)
  601ae3:	00 00                	add    %al,(%rax)
  601ae5:	00 00                	add    %al,(%rax)
  601ae7:	00 fe                	add    %bh,%dh
  601ae9:	ff                   	(bad)  
  601aea:	ff 6f 00             	ljmpq  *0x0(%rdi)
  601aed:	00 00                	add    %al,(%rax)
  601aef:	00 38                	add    %bh,(%rax)
  601af1:	05 40 00 00 00       	add    $0x40,%eax
  601af6:	00 00                	add    %al,(%rax)
  601af8:	ff                   	(bad)  
  601af9:	ff                   	(bad)  
  601afa:	ff 6f 00             	ljmpq  *0x0(%rdi)
  601afd:	00 00                	add    %al,(%rax)
  601aff:	00 01                	add    %al,(%rcx)
  601b01:	00 00                	add    %al,(%rax)
  601b03:	00 00                	add    %al,(%rax)
  601b05:	00 00                	add    %al,(%rax)
  601b07:	00 f0                	add    %dh,%al
  601b09:	ff                   	(bad)  
  601b0a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  601b0d:	00 00                	add    %al,(%rax)
  601b0f:	00 0e                	add    %cl,(%rsi)
  601b11:	05 40 00 00 00       	add    $0x40,%eax
	...

Disassembly of section .got:

0000000000601b78 <.got>:
	...

Disassembly of section .got.plt:

0000000000601b80 <_GLOBAL_OFFSET_TABLE_>:
  601b80:	a8 19                	test   $0x19,%al
  601b82:	60                   	(bad)  
	...
  601b97:	00 76 07             	add    %dh,0x7(%rsi)
  601b9a:	40 00 00             	add    %al,(%rax)
  601b9d:	00 00                	add    %al,(%rax)
  601b9f:	00 86 07 40 00 00    	add    %al,0x4007(%rsi)
  601ba5:	00 00                	add    %al,(%rax)
  601ba7:	00 96 07 40 00 00    	add    %dl,0x4007(%rsi)
  601bad:	00 00                	add    %al,(%rax)
  601baf:	00 a6 07 40 00 00    	add    %ah,0x4007(%rsi)
  601bb5:	00 00                	add    %al,(%rax)
  601bb7:	00 b6 07 40 00 00    	add    %dh,0x4007(%rsi)
  601bbd:	00 00                	add    %al,(%rax)
  601bbf:	00 c6                	add    %al,%dh
  601bc1:	07                   	(bad)  
  601bc2:	40 00 00             	add    %al,(%rax)
  601bc5:	00 00                	add    %al,(%rax)
  601bc7:	00 d6                	add    %dl,%dh
  601bc9:	07                   	(bad)  
  601bca:	40 00 00             	add    %al,(%rax)
  601bcd:	00 00                	add    %al,(%rax)
  601bcf:	00 e6                	add    %ah,%dh
  601bd1:	07                   	(bad)  
  601bd2:	40 00 00             	add    %al,(%rax)
  601bd5:	00 00                	add    %al,(%rax)
  601bd7:	00 f6                	add    %dh,%dh
  601bd9:	07                   	(bad)  
  601bda:	40 00 00             	add    %al,(%rax)
  601bdd:	00 00                	add    %al,(%rax)
  601bdf:	00 06                	add    %al,(%rsi)
  601be1:	08 40 00             	or     %al,0x0(%rax)
  601be4:	00 00                	add    %al,(%rax)
  601be6:	00 00                	add    %al,(%rax)
  601be8:	16                   	(bad)  
  601be9:	08 40 00             	or     %al,0x0(%rax)
  601bec:	00 00                	add    %al,(%rax)
  601bee:	00 00                	add    %al,(%rax)
  601bf0:	26 08 40 00          	or     %al,%es:0x0(%rax)
  601bf4:	00 00                	add    %al,(%rax)
  601bf6:	00 00                	add    %al,(%rax)
  601bf8:	36 08 40 00          	or     %al,%ss:0x0(%rax)
  601bfc:	00 00                	add    %al,(%rax)
  601bfe:	00 00                	add    %al,(%rax)
  601c00:	46 08 40 00          	rex.RX or %r8b,0x0(%rax)
  601c04:	00 00                	add    %al,(%rax)
  601c06:	00 00                	add    %al,(%rax)
  601c08:	56                   	push   %rsi
  601c09:	08 40 00             	or     %al,0x0(%rax)
  601c0c:	00 00                	add    %al,(%rax)
  601c0e:	00 00                	add    %al,(%rax)
  601c10:	66 08 40 00          	data16 or %al,0x0(%rax)
  601c14:	00 00                	add    %al,(%rax)
  601c16:	00 00                	add    %al,(%rax)
  601c18:	76 08                	jbe    601c22 <_GLOBAL_OFFSET_TABLE_+0xa2>
  601c1a:	40 00 00             	add    %al,(%rax)
  601c1d:	00 00                	add    %al,(%rax)
  601c1f:	00 86 08 40 00 00    	add    %al,0x4008(%rsi)
  601c25:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601c28 <__data_start>:
	...

0000000000601c30 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601c40 <stderr@@GLIBC_2.2.5>:
	...

0000000000601c48 <completed.6661>:
	...

0000000000601c50 <logger>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 44 65 62          	sub    %al,0x62(%rbp,%riz,2)
   9:	69 61 6e 20 34 2e 39 	imul   $0x392e3420,0x6e(%rcx),%esp
  10:	2e 32 2d 31 30 29 20 	xor    %cs:0x20293031(%rip),%ch        # 20293048 <_end+0x1fc913e0>
  17:	34 2e                	xor    $0x2e,%al
  19:	39 2e                	cmp    %ebp,(%rsi)
  1b:	32 00                	xor    (%rax),%al
  1d:	47                   	rex.RXB
  1e:	43                   	rex.XB
  1f:	43 3a 20             	rex.XB cmp (%r8),%spl
  22:	28 44 65 62          	sub    %al,0x62(%rbp,%riz,2)
  26:	69 61 6e 20 34 2e 38 	imul   $0x382e3420,0x6e(%rcx),%esp
  2d:	2e 34 2d             	cs xor $0x2d,%al
  30:	31 29                	xor    %ebp,(%rcx)
  32:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
  35:	38 2e                	cmp    %ch,(%rsi)
  37:	34 00                	xor    $0x0,%al
